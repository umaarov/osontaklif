[
  {
    "id": "18",
    "question": "Расскажи о себе",
    "chance": "93",
    "tag": "Общие"
  },
  {
    "id": "19",
    "question": "Что такое ООП",
    "chance": "81",
    "tag": "ООП"
  },
  {
    "id": "2725",
    "question": "В чем разница между checked и unchecked исключениями",
    "chance": "75",
    "tag": "Java Core"
  },
  {
    "id": "2727",
    "question": "Какие методы в классе Object знаешь",
    "chance": "68",
    "tag": "Java Core"
  },
  {
    "id": "2726",
    "question": "Расскажи про иерархию исключений",
    "chance": "68",
    "tag": "Java Core"
  },
  {
    "id": "6921",
    "question": "Расскажи об иерархии коллекций в Java",
    "chance": "62",
    "tag": "Java Collections"
  },
  {
    "id": "20",
    "question": "Что такое SOLID",
    "chance": "62",
    "tag": "Общие"
  },
  {
    "id": "6923",
    "question": "Как организована HashMap",
    "chance": "56",
    "tag": "Java Collections"
  },
  {
    "id": "6925",
    "question": "Чем отличаются LinkedList и ArrayList",
    "chance": "56",
    "tag": "Java Collections"
  },
  {
    "id": "2730",
    "question": "В чём различие между интерфейсом и абстрактным классом",
    "chance": "56",
    "tag": "Java Core"
  },
  {
    "id": "2728",
    "question": "Расскажи про Hash Code & Equals Contract",
    "chance": "56",
    "tag": "Java Core"
  },
  {
    "id": "2729",
    "question": "В чём разница между примитивом и ссылочным типом данных",
    "chance": "56",
    "tag": "Java Core"
  },
  {
    "id": "21",
    "question": "Какой есть опыт в программировании",
    "chance": "50",
    "tag": "Общие"
  },
  {
    "id": "2731",
    "question": "Что знаешь о классе object",
    "chance": "50",
    "tag": "Java Core"
  },
  {
    "id": "65",
    "question": "Какие есть принципы ООП",
    "chance": "50",
    "tag": "ООП"
  },
  {
    "id": "7150",
    "question": "Что такое ACID",
    "chance": "43",
    "tag": "Базы данных"
  },
  {
    "id": "7100",
    "question": "что такое  Stream в Java ?",
    "chance": "43",
    "tag": "Java 8"
  },
  {
    "id": "2392",
    "question": "Какие Spring Scope знаешь",
    "chance": "43",
    "tag": "Spring"
  },
  {
    "id": "7101",
    "question": "Что такое функциональный интерфейс",
    "chance": "37",
    "tag": "Java 8"
  },
  {
    "id": "7121",
    "question": "Что такое ExecutorService",
    "chance": "31",
    "tag": "Многопоточность"
  },
  {
    "id": "7153",
    "question": "В чём разница между SQL и NoSQL",
    "chance": "31",
    "tag": "Базы данных"
  },
  {
    "id": "2732",
    "question": "Какие правила переопределения hashcode и equals",
    "chance": "31",
    "tag": "Java Core"
  },
  {
    "id": "7102",
    "question": "Что такое Lambda",
    "chance": "31",
    "tag": "Java 8"
  },
  {
    "id": "7151",
    "question": "Что такое индексы",
    "chance": "31",
    "tag": "Базы данных"
  },
  {
    "id": "7152",
    "question": "Что такое нормализация баз данных",
    "chance": "31",
    "tag": "Базы данных"
  },
  {
    "id": "2393",
    "question": "Что такое bean",
    "chance": "31",
    "tag": "Spring"
  },
  {
    "id": "7120",
    "question": "Расскажи про deadlock",
    "chance": "31",
    "tag": "Многопоточность"
  },
  {
    "id": "6927",
    "question": "Каким образом HashMap связан с Set'ом",
    "chance": "25",
    "tag": "Java Collections"
  },
  {
    "id": "7123",
    "question": "Что такое процесс и поток, чем они отличаются",
    "chance": "25",
    "tag": "Многопоточность"
  },
  {
    "id": "6929",
    "question": "Расскажи про HashMap",
    "chance": "25",
    "tag": "Java Collections"
  },
  {
    "id": "92",
    "question": "Какие знаешь паттерны проектирования",
    "chance": "25",
    "tag": "Паттерны"
  },
  {
    "id": "2734",
    "question": "Какие участки памяти в JVM знаешь",
    "chance": "25",
    "tag": "Java Core"
  },
  {
    "id": "2733",
    "question": "Зачем вообще нужен класс object",
    "chance": "25",
    "tag": "Java Core"
  },
  {
    "id": "2736",
    "question": "Какие примитивные типы данных есть в Java",
    "chance": "25",
    "tag": "Java Core"
  },
  {
    "id": "66",
    "question": "Что такое полиморфизм",
    "chance": "25",
    "tag": "ООП"
  },
  {
    "id": "2735",
    "question": "В чём разница между  final vs. finally vs. finalize",
    "chance": "25",
    "tag": "Java Core"
  },
  {
    "id": "10549",
    "question": "Знаком с SQL",
    "chance": "25",
    "tag": "SQL"
  },
  {
    "id": "91",
    "question": "Чем singleton отличается от prototype",
    "chance": "25",
    "tag": "Паттерны"
  },
  {
    "id": "7124",
    "question": "Расскажи про race condition",
    "chance": "25",
    "tag": "Многопоточность"
  },
  {
    "id": "120",
    "question": "Вы знакомы с SQL",
    "chance": "25",
    "tag": "SQL"
  },
  {
    "id": "2394",
    "question": "Какой цикл жизни Spring Beans",
    "chance": "25",
    "tag": "Spring"
  },
  {
    "id": "7122",
    "question": "В чем идея многопоточности",
    "chance": "25",
    "tag": "Многопоточность"
  },
  {
    "id": "3876",
    "question": "В чём разница между JDK и JRE",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "6935",
    "question": "В чём разница между  TreeSet и  HashSet",
    "chance": "18",
    "tag": "Java Collections"
  },
  {
    "id": "3900",
    "question": "Что такое исключение",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "2737",
    "question": "Какие типы данных бывают в java",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "3880",
    "question": "Что такое инкапсуляция",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "3883",
    "question": "Какая основная идея equals и HashCode",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "1760",
    "question": "Что такое ORM",
    "chance": "18",
    "tag": "Фреймворки"
  },
  {
    "id": "3878",
    "question": "Чем отличается операция map от flatMap",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "2396",
    "question": "В чем разница между dependency injection и inverhuron of control",
    "chance": "18",
    "tag": "Spring"
  },
  {
    "id": "3887",
    "question": "Что знаешь про String",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "93",
    "question": "Почему синглтон называют антипаттерном",
    "chance": "18",
    "tag": "Паттерны"
  },
  {
    "id": "3906",
    "question": "Что такое hashcode",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "3889",
    "question": "Что такое ключевое слово final",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "7154",
    "question": "Назови сколько существует нормальных форм в SQL",
    "chance": "18",
    "tag": "Базы данных"
  },
  {
    "id": "7155",
    "question": "Чем отличаются LEFT JOIN от INNER JOIN",
    "chance": "18",
    "tag": "Базы данных"
  },
  {
    "id": "3904",
    "question": "Что такое модификаторы доступа и какие они есть",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "7125",
    "question": "Что такое оптимистичная и пессимистичная блокировки",
    "chance": "18",
    "tag": "Многопоточность"
  },
  {
    "id": "7126",
    "question": "Что такое монитор",
    "chance": "18",
    "tag": "Многопоточность"
  },
  {
    "id": "22",
    "question": "Почему именно Java",
    "chance": "18",
    "tag": "Общие"
  },
  {
    "id": "122",
    "question": "Какие виды join знаешь",
    "chance": "18",
    "tag": "SQL"
  },
  {
    "id": "121",
    "question": "Чем отличается where от having",
    "chance": "18",
    "tag": "SQL"
  },
  {
    "id": "7109",
    "question": "Что такое hibernate",
    "chance": "18",
    "tag": "Hibernate"
  },
  {
    "id": "6932",
    "question": "В чем разница меду hashmap и hashtable",
    "chance": "18",
    "tag": "Java Collections"
  },
  {
    "id": "3893",
    "question": "Что такое пул строк",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "6930",
    "question": "Почему Map стоит особняком в иерархии коллекций",
    "chance": "18",
    "tag": "Java Collections"
  },
  {
    "id": "2395",
    "question": "Какие Scop'ы есть у bean'ов",
    "chance": "18",
    "tag": "Spring"
  },
  {
    "id": "2397",
    "question": "Зачем нужен Spring Framework",
    "chance": "18",
    "tag": "Spring"
  },
  {
    "id": "2398",
    "question": "Что такое Spring контекст",
    "chance": "18",
    "tag": "Spring"
  },
  {
    "id": "3896",
    "question": "Что такое итератор и зачем он нужен",
    "chance": "18",
    "tag": "Java Core"
  },
  {
    "id": "111",
    "question": "Чем rebase отличается от merge?",
    "chance": "12",
    "tag": "Git"
  },
  {
    "id": "3976",
    "question": "Что делает ключевое слово transient",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3975",
    "question": "Что такое finalize",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3972",
    "question": "Что знаешь о методе clone",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3971",
    "question": "В чём отличие Supplier'а от Consumer'а",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3973",
    "question": "Что такое строка в Java",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3967",
    "question": "С чем работает Garbage Collector",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3965",
    "question": "В чем идея Stream API",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3968",
    "question": "В чём идея полиморфизма",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3974",
    "question": "Можно ли переопределить статические методы",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3958",
    "question": "Какие методы располагаются в интерфейсе",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3956",
    "question": "Как работает оператор try with resourses",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3960",
    "question": "Что знаешь про функциональный интерфейс Java 8+",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3952",
    "question": "String Builder и String Buffer , в чём различия",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "25",
    "question": "Что такое принципы SOLID",
    "chance": "12",
    "tag": "Общие"
  },
  {
    "id": "3954",
    "question": "Может ли примитивный тип данных попасть в Hip",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3962",
    "question": "Что такое Parallel Stream",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3946",
    "question": "Основная идея инкапсуляции",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3944",
    "question": "Почему нельзя сравнивать объекты через «==»",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3948",
    "question": "Зачем нужен String Pool",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3969",
    "question": "В чём смысл инкапсуляции",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3937",
    "question": "Что такое JVM, JDK, JRE",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3951",
    "question": "В чем взаимосвязь контракта equals и hashCode",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3963",
    "question": "Каким образом можно реализовать множественное наследование в Java",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "3970",
    "question": "Что такое string pool",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "94",
    "question": "Какие шаблоны проектирования знаешь",
    "chance": "12",
    "tag": "Паттерны"
  },
  {
    "id": "67",
    "question": "В чем преимущества и недостатки ООП по сравнению с процедурным и функциональным программированием",
    "chance": "12",
    "tag": "ООП"
  },
  {
    "id": "3940",
    "question": "Какие типы данных существуют в Java",
    "chance": "12",
    "tag": "Java Core"
  },
  {
    "id": "1729",
    "question": "Что такое mock в тестирование",
    "chance": "12",
    "tag": "Tools"
  },
  {
    "id": "7133",
    "question": "Что такое volatile",
    "chance": "12",
    "tag": "Многопоточность"
  },
  {
    "id": "7158",
    "question": "Что такое партиционирование",
    "chance": "12",
    "tag": "Базы данных"
  },
  {
    "id": "7128",
    "question": "Что такое синхронизация и зачем она нужна",
    "chance": "12",
    "tag": "Многопоточность"
  },
  {
    "id": "7129",
    "question": "Что такое future",
    "chance": "12",
    "tag": "Многопоточность"
  },
  {
    "id": "7110",
    "question": "Какие состояния объекта есть в Hibernate",
    "chance": "12",
    "tag": "Hibernate"
  },
  {
    "id": "7130",
    "question": "Что такое CompletableFuture",
    "chance": "12",
    "tag": "Многопоточность"
  },
  {
    "id": "7159",
    "question": "В чем разница char и varchar в SQL",
    "chance": "12",
    "tag": "Базы данных"
  },
  {
    "id": "1727",
    "question": "Что такое JDBC",
    "chance": "12",
    "tag": "Tools"
  },
  {
    "id": "6950",
    "question": "Какую структуру данных реализуем в LinkedList",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "6946",
    "question": "Является ли коллекция HashMap потоко безопасной",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "6940",
    "question": "Какие в java есть коллекции",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "6942",
    "question": "Что такое коллекции и зачем они нужны",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "6948",
    "question": "Массив статическая структура данных или динамическая",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "6955",
    "question": "Расскажи о скоростях доступа к элементам в HashMap при выполнении базовых операций",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "2400",
    "question": "Что лежит в основе Spring",
    "chance": "12",
    "tag": "Spring"
  },
  {
    "id": "6951",
    "question": "HashTable и ConcurrentHashMap - отличия и что эффективнее",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "6953",
    "question": "Расскажи про сложность поиска элемента по ключу в HashMap",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "68",
    "question": "Что такое столп \"наследование\"",
    "chance": "12",
    "tag": "ООП"
  },
  {
    "id": "2404",
    "question": "Что такое Dispatcher Servlet",
    "chance": "12",
    "tag": "Spring"
  },
  {
    "id": "6937",
    "question": "Что такое Deque",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "2406",
    "question": "Какие виды внедрения зависимости есть",
    "chance": "12",
    "tag": "Spring"
  },
  {
    "id": "6938",
    "question": "Что такое Vector",
    "chance": "12",
    "tag": "Java Collections"
  },
  {
    "id": "2408",
    "question": "Для чего используется Spring boot",
    "chance": "12",
    "tag": "Spring"
  },
  {
    "id": "7160",
    "question": "В чём различие между LeftJoin , RightJoin и InnerJoin",
    "chance": "12",
    "tag": "Базы данных"
  },
  {
    "id": "24",
    "question": "Что такое CI/CD",
    "chance": "12",
    "tag": "Общие"
  },
  {
    "id": "26",
    "question": "Какие виды тестирования ты знаешь",
    "chance": "12",
    "tag": "Общие"
  },
  {
    "id": "2411",
    "question": "Что такое spring boot и в чём его основное преимущество",
    "chance": "12",
    "tag": "Spring"
  },
  {
    "id": "2410",
    "question": "Какие знаешь Bean Scope",
    "chance": "12",
    "tag": "Spring"
  },
  {
    "id": "69",
    "question": "Как ты можешь описать абстракцию",
    "chance": "12",
    "tag": "ООП"
  },
  {
    "id": "2409",
    "question": "Что такое SpringScope",
    "chance": "12",
    "tag": "Spring"
  },
  {
    "id": "7161",
    "question": "Какие бывают ограничения в Базе Данных",
    "chance": "12",
    "tag": "Базы данных"
  },
  {
    "id": "112",
    "question": "Какими командами пользуешься в Git",
    "chance": "6",
    "tag": "Git"
  },
  {
    "id": "31",
    "question": "Как ты используешь SOLID принцип открытости-закрытости при проектировании",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "110",
    "question": "В чем разница между шаблоном проектирования Builder и Facade",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "109",
    "question": "В чем недостаток паттернов",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "34",
    "question": "Какие знаешь подходы к организации процесса разработки",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "57",
    "question": "Какое отношение между JS и Java",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "108",
    "question": "Что такое паттерны проектирования",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "107",
    "question": "Расскажи про свой опыт проектирования",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "35",
    "question": "Какие цели ставишь перед собой",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "106",
    "question": "Какие паттерны проектирования используешь",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "105",
    "question": "Какие бы каналы синхронизации использовал при организации взаимодействия нескольких сервисов",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "36",
    "question": "Какие интересные задачи приходилось решать",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "58",
    "question": "Что такое TDD",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "42",
    "question": "Назови самый простой способ реализации кэширования",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "1808",
    "question": "Какие виды отношений существуют в структурной диаграмме классов",
    "chance": "6",
    "tag": "UML"
  },
  {
    "id": "1807",
    "question": "Какие существуют типы диаграмм",
    "chance": "6",
    "tag": "UML"
  },
  {
    "id": "104",
    "question": "Как бы организовывал взаимодействие нескольких сервисов",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "1806",
    "question": "Что такое UML Что такое «диаграмма», «нотация» и «метамодель» в UML",
    "chance": "6",
    "tag": "UML"
  },
  {
    "id": "1797",
    "question": "Что такое XSLT",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "103",
    "question": "Какие плюсы у микросервисов есть перед монолитом",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "37",
    "question": "Какие языки еще ты знаешь, которые используют байт-код",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "1795",
    "question": "Что такое JAXP",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "1793",
    "question": "Какие знаешь способы записи XML",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "102",
    "question": "Расскажи что-нибудь про микросервисное взаимодействие",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "1791",
    "question": "Когда следует использовать DOM, а когда SAX, StAX анализаторы",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "1790",
    "question": "Какие знаешь методы чтения XML, опиши сильные и слабые стороны каждого метода",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "101",
    "question": "Какая структура действует максимально быстро к паттерну Comand, чем его можно заменить",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "38",
    "question": "Для чего используется кэширование",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "1788",
    "question": "Какие типы существуют в XSD",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "1786",
    "question": "Что такое «пространство имен» в XML",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "100",
    "question": "Зачем нужен паттерн Comand",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "1784",
    "question": "Чем well-formed XML отличается от valid XML",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "1783",
    "question": "Что такое DTD",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "99",
    "question": "Пользуешься ли паттерном Comand в работе",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "39",
    "question": "Кэширование работает только с базами данных или нет",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "2479",
    "question": "Какие действия необходимо проделать при создании сервлетов",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "1782",
    "question": "Что такое xsd схема",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "2478",
    "question": "Что такое «дескриптор развертывания»",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2477",
    "question": "Как контейнер сервлетов управляет жизненным циклом сервлета, когда и какие методы вызываются",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "1780",
    "question": "Что такое xml",
    "chance": "6",
    "tag": "XML"
  },
  {
    "id": "98",
    "question": "В чем преимущество паттерна Builder перед конструктором",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "2480",
    "question": "В каком случае требуется переопределять метод service()",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2481",
    "question": "Есть ли смысл определять для сервлета конструктор, каким образом лучше инициализировать данные",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2476",
    "question": "Зачем нужны сервера приложений, если есть контейнеры сервлетов",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2488",
    "question": "Как обработать в приложении исключения, выброшенные другим сервлетом",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2487",
    "question": "Как реализовать запуск сервлета одновременно с запуском приложения",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2486",
    "question": "Когда стоит использовать фильтры сервлетов, а когда слушателей",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2485",
    "question": "Зачем в сервлетах используются различные listener",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2490",
    "question": "Что представляет собой ServletContext",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2491",
    "question": "В чем отличия ServletContext и ServletConfig",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2492",
    "question": "Для чего нужен интерфейс ServletResponse",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2493",
    "question": "Для чего нужен интерфейс ServletRequest",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2494",
    "question": "Что такое Request Dispatcher",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2495",
    "question": "Как из одного сервлета вызвать другой сервлет",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2496",
    "question": "Чем отличается sendRedirect() от forward()",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2497",
    "question": "Для чего используются атрибуты сервлетов и как происходит работа с ними",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2498",
    "question": "В чем отличия GenericServlet и HttpServlet",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2499",
    "question": "Почему HttpServlet класс объявлен как абстрактный",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2500",
    "question": "Какие основные методы присутствуют в классе HttpServlet",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2501",
    "question": "Какой метод HTTP не является неизменяемым",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2502",
    "question": "Какие есть методы отправки данных с клиента на сервер",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2503",
    "question": "В чем разница между методами GET и POST",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2504",
    "question": "В чем разница между PrintWriter и ServletOutputStream",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2506",
    "question": "Расскажите об интерфейсе SingleThreadModel",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2508",
    "question": "Какие различные методы управления сессией в сервлетах знаешь",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2484",
    "question": "Что знаешь о сервлетных фильтрах",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2510",
    "question": "Какие методы для работы с cookies предусмотрены в сервлетах",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2483",
    "question": "Какие наиболее распространенные задачи выполняются в контейнере сервлетов",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2512",
    "question": "Зачем нужны и чем отличаются методы encodeURL() и encodeRedirectURL()",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2514",
    "question": "Как уведомить объект в сессии, что сессия недействительна или закончилась",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2482",
    "question": "Почему необходимо переопределить только init() метод без аргументов",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2516",
    "question": "Как мы можем обеспечить transport layer security для нашего веб приложения",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2518",
    "question": "Какие основные особенности появились в спецификации Servlet 3",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2520",
    "question": "Что такое Java Server Pages JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2522",
    "question": "Опиши, как обрабатываются JSP страницы, начиная от запроса к серверу, заканчивая ответом пользователю.",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2524",
    "question": "Расскажи о методах жизненного цикла JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2526",
    "question": "Как можно предотвратить прямой доступ к JSP странице из браузера",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2528",
    "question": "Какие существуют основные типы тегов JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2532",
    "question": "Какие неявные, внутренние объекты и методы есть на JSP странице",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2534",
    "question": "Что знаешь о PageContext и какие преимущества его использования",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2536",
    "question": "Почему не рекомендуется использовать скриплеты, скриптовые элементы, в JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2475",
    "question": "Что такое «контейнер сервлетов»",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "1763",
    "question": "Расскажи про транзитивность",
    "chance": "6",
    "tag": "Фреймворки"
  },
  {
    "id": "2474",
    "question": "Какова структура веб-проекта",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2473",
    "question": "В чем заключаются преимущества технологии сервлетов над CGI Common Gateway Interface",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "1762",
    "question": "Что используешь mavel или gradel при сборке проекта",
    "chance": "6",
    "tag": "Фреймворки"
  },
  {
    "id": "97",
    "question": "Какие паттерны использовал кроме Singleton",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "44",
    "question": "Занимался ли ещё где-то Java",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "59",
    "question": "Что такое Lombok",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "33",
    "question": "Расскажи о своем самом интересном проекте",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "2471",
    "question": "Слышал ли что-нибудь про Spring MVC",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2470",
    "question": "Что нам даёт dependency injectoin",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2469",
    "question": "В чем разница между IOC и dependency injection",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1741",
    "question": "Для чего нужен Swagger",
    "chance": "6",
    "tag": "Tools"
  },
  {
    "id": "96",
    "question": "Где можно использовать Singleton",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "2468",
    "question": "Какие могут быть возвращаемые типы данных в Spring MVC",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2467",
    "question": "Может ли оказаться так что контроллера в контексте нет",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1740",
    "question": "Что такое message-брокеры",
    "chance": "6",
    "tag": "Tools"
  },
  {
    "id": "2466",
    "question": "Что нам нужно чтобы Spring MVC заработал",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2465",
    "question": "Что такое Scope",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1738",
    "question": "Чем docker отличается от виртуальной машины",
    "chance": "6",
    "tag": "Tools"
  },
  {
    "id": "95",
    "question": "Какие задачи решал с использованием паттернов",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "46",
    "question": "В каком универсистете ты занимался",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "2464",
    "question": "Что такое контекст",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2463",
    "question": "Как dependency injectoin можно применить с SpringBean",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1736",
    "question": "Чем отличается docker от kubernetes",
    "chance": "6",
    "tag": "Tools"
  },
  {
    "id": "2462",
    "question": "Что такое http тип",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2461",
    "question": "Как Dispatcher Servlet \"понимает\" какой метод вызвать",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1735",
    "question": "Для чего нужна секция dependence management",
    "chance": "6",
    "tag": "Tools"
  },
  {
    "id": "2460",
    "question": "Как клиент может понять что с сервера пришло в браузер",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2459",
    "question": "Зачем нужен Rest",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2458",
    "question": "В чем разница между request mapping и put mapping",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2457",
    "question": "Какие scope можно использовать для любого приложения",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1733",
    "question": "Расскажи про структуру pom файла в менеджере пакетов Maven.",
    "chance": "6",
    "tag": "Tools"
  },
  {
    "id": "1730",
    "question": "Жизненный цикл Maven",
    "chance": "6",
    "tag": "Tools"
  },
  {
    "id": "47",
    "question": "Сколько ты совокупно занимаешься Java",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "2456",
    "question": "Request мы можем использовать во всех Spring приложениях",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2455",
    "question": "Как используешь dependency injection",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2454",
    "question": "Какие знаешь реализации ioC",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2453",
    "question": "Что в spring'е из себя представляет Spring ioC контейнер",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2452",
    "question": "Какие области видимости в Spring знаешь",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2451",
    "question": "Какие виды внедрения зависимости знаешь",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2450",
    "question": "Расскажи что такое inversion of Conrol",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2449",
    "question": "Что такое spring framework",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1675",
    "question": "Что такое «представление»,view, и для чего оно применяется",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "1672",
    "question": "Что такое «временная таблица», для чего она используется",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "2448",
    "question": "Где удобнее применять конфигурацию Java, а где конфигурацию XML",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2447",
    "question": "Какую конфигурацию бы убрал",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1668",
    "question": "Что означает NULL в SQL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "2446",
    "question": "Какую из конфигурация, XML, Java Annotation,предпочитаешь больше, почему",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2445",
    "question": "Какая конфигурация выполнится приорететней: XML, Java или Annotation",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1666",
    "question": "Какие существуют операторы SQL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "2444",
    "question": "Сейчас в Spring'е не надо указывать аннотацию AutoWired, почему это так",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2443",
    "question": "Как создать контроллер в Spring'е",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2442",
    "question": "Как можно создать Servlett в Spring'е",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2441",
    "question": "Как работает контекст",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1665",
    "question": "Что такое курсор в реляционной БД",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "1663",
    "question": "Что такое триггеры в реляционной БД",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "48",
    "question": "Что побудило остановиться на другом языке программирования",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "49",
    "question": "Как ты себя оцениваешь",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "2440",
    "question": "Есть ли возможность создать два Singleton'а в Spring'е",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2439",
    "question": "Много ли контекстов может быть",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1657",
    "question": "Расскажи о полный синтаксис SELECT в реляционной БД",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "2438",
    "question": "Что делает компонент scan",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2437",
    "question": "Чем отличаются Filters, Interceptors, и Listeners в Spring",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1655",
    "question": "Для чего в SQL есть HAVING",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "2436",
    "question": "Чем отличается компонент от бина",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2435",
    "question": "В чем разница между Spring аннотациями Component, Repository и Service",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "1652",
    "question": "Что делает merge",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "2434",
    "question": "Какой жизненный цикл объекта, который создает Spring",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2433",
    "question": "Чем отличается аутентификация от авторизации",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "125",
    "question": "Что такое join",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "50",
    "question": "Где учился",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "2432",
    "question": "Для чего нужен JWT",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2431",
    "question": "Как бы организовал метод delete",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2430",
    "question": "Чем SOAP отличается от REST",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2578",
    "question": "Как закрыть соединение с базой данных",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "2577",
    "question": "Как вызвать хранимую процедуру",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "2429",
    "question": "Как на Java писать веб-приложение",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "124",
    "question": "Что такое хранимые процедуры и какой способ вызова через JDBC",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "2576",
    "question": "Как осуществляется запрос к базе данных и обработка результатов",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "2575",
    "question": "При помощи чего формируются запросы к базе данных",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "2428",
    "question": "Зачем нужен спринг",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "3978",
    "question": "Что нужно, чтобы написанная на Java программа, заработала",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2574",
    "question": "Какие уровни изоляции транзакций поддерживаются в JDBC",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "3980",
    "question": "Что может рассказать о манифесте файла jar",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3981",
    "question": "Расскажи про области памяти и Garbage Collector",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3982",
    "question": "Какие типы данных есть в контексте JVM",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2573",
    "question": "Как зарегистрировать драйвер JDBC",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "3984",
    "question": "Какие области памяти можете вспомнить кроме стэка и кучи",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3985",
    "question": "Какие минусы есть у пула строк с точки зрения безопасности",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3986",
    "question": "Как изначально создается пул строк",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2427",
    "question": "Для чего нужна аннотация Bean",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "3988",
    "question": "За счет чего работают Lambda-выражения, что происходит \"под капотом\"",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3989",
    "question": "Используешь в работе Lambda-выражения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3990",
    "question": "На базе чего работают Lambda выражения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2572",
    "question": "Опиши основные этапы работы с базой данных с использованием JDBC",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "3992",
    "question": "Откуда берутся методы equals и hashcode",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3993",
    "question": "Почему hashcode могут быть равны",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3994",
    "question": "Что знаешь про модели памяти в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3995",
    "question": "Когда stream начинает свое выполнение",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3996",
    "question": "Что такое модификатор default equals и hashcode",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3997",
    "question": "Что такое heap, stack",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3998",
    "question": "Какие могут проблемы при реализации Hashcode",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "3999",
    "question": "Для чего нужно стирание типов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4000",
    "question": "От скольки классов может наследоваться класс",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4001",
    "question": "Как создать свою аннотацию",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4002",
    "question": "Какие два класса не наследуются от Object",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4003",
    "question": "Что такое затирание типов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4004",
    "question": "Как передаются параметры",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4005",
    "question": "Расскажи особенности языка Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4006",
    "question": "Каким образом Java машина помогает запускать код на операционных системах",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4007",
    "question": "Как данные хранятся в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4008",
    "question": "Как определить какой объект является мусором",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4009",
    "question": "Могут ли разработчики управлять сборкой мусора и параметрами памяти",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4010",
    "question": "Что такое объект в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2571",
    "question": "Из каких частей стоит JDBC",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "4012",
    "question": "Из чего состоит класс",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2570",
    "question": "Перечисли основные типы данных используемые в JDBC, как они связаны с типами Java",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "4014",
    "question": "Для чего используется структура try finally",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2569",
    "question": "Что из себя представляет JDBC URL",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "4016",
    "question": "Какие элементы из функционального программирования появились в Java8",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4017",
    "question": "Чем примечательна Java в контексте платформы",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4018",
    "question": "Что такое Garbage Collector",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4019",
    "question": "После какого момента GC понимает, что нужно собирать мусор",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4020",
    "question": "Какие GC знаешь",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4021",
    "question": "Каким образом мы можем задавать параметры конфигурации GC",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4022",
    "question": "Какие плагины можно поставить при создании виртуальной машины",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4023",
    "question": "Чем отличаются equals и hashcode",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4024",
    "question": "Почему важно переопределять equals и hashcode",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4025",
    "question": "В контексте бизнеса обязательно ли учитывать в equals все поля сущности",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4026",
    "question": "Расскажи кратко об идее обработки ошибок в Java.",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4027",
    "question": "Какие конструкции в обработке ошибок знаешь",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4028",
    "question": "Когда может произойти ситуация, когда мы можем перезатереть исключение",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4029",
    "question": "Где в обработке исключений может применяться конструкция с finally",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4030",
    "question": "Какая величина у байта",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4031",
    "question": "Зачем и как переопределять hashcode",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2426",
    "question": "Чем отличается RestController от Controller",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "4033",
    "question": "Как устроена строка \"под капотом\"",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4034",
    "question": "Как привести строку в массивы символов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4035",
    "question": "Чем обеспечена иммутабельность",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4036",
    "question": "Какими характеристиками должен обладать метод чтобы функциональный итерфейс был функциональным",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4037",
    "question": "Что нужно делать для того чтобы принимать и возвращать значения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4038",
    "question": "Можем ли мы без JDK вести Java разработку",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4039",
    "question": "Объясни чем обусловлено то, что int ограничен в размере",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4040",
    "question": "Где ссылочные типы данных хранятся",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4041",
    "question": "Могу ли я использовать equals в том виде в котором он есть",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4042",
    "question": "В чем разница между Абстрактным классом и абстрактным методом, и абстрактным методом и Интерфейсом",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4043",
    "question": "Что такое динамический полиморфизм",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4044",
    "question": "В чем заключается идея перегрузки конструкторов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4045",
    "question": "Почему так важна иммутабельность",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4046",
    "question": "В чем разница внедрения зависимостей через конструктор и через Setter",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4048",
    "question": "Всегда ли нам нужно переопределять equals",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4049",
    "question": "Почему Java платформа является независимой",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4051",
    "question": "С чем связано неполная объектоориентированность Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4053",
    "question": "Какие знаешь Wrapper'ы",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4056",
    "question": "Слышал ли что то про Boxing/Unboxing",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4058",
    "question": "В чём разница между методом и конструктором",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4060",
    "question": "Можно ли переопределить метод? А конструктор",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4072",
    "question": "Что такое гетерогенные типы",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4074",
    "question": "Как хранить и обрабатывать пароль работая с Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4077",
    "question": "Где бы стоило применять Enum перечисления",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4079",
    "question": "Какие методы самые важные и используются чаще всего",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4081",
    "question": "Приходилось ли самостоятельно переопределять equals",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4083",
    "question": "Как строки хранятся в памяти",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4086",
    "question": "В чем проблема конкатенации",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4088",
    "question": "Пробовал когда-нибудь метод append",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4090",
    "question": "В чем разница между error и exception",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4092",
    "question": "Приведи пример ошибки на уровне JVM",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4094",
    "question": "В чем проблема проверяемых исключений",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4095",
    "question": "Удалил бы ты из Java checked исключения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4097",
    "question": "Приведи примеры где использовал бы checked",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4099",
    "question": "Могу ли я сделать улучшенный цикл for each для своего объекта",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4101",
    "question": "Какой самый полезный метод в object",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4102",
    "question": "В чем преимущество package private",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4103",
    "question": "Как package private можно связать с инкапсуляцией",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4104",
    "question": "Какой шаблон проектирования применен для StringBuilder и StringBuffer",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4105",
    "question": "Можно ли массив сконвертировать в стрим",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4106",
    "question": "Какой самый крутой метод в стримах",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4107",
    "question": "Что знаешь про TargetMethod",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4108",
    "question": "Что слышал про класс optional",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "4109",
    "question": "Обязательно ли создавть класс в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6962",
    "question": "От чего имплимитируют list, set",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "6717",
    "question": "Строка это тяжеловесный объект",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6720",
    "question": "Где можно применить многоформенность полиморфизма",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6722",
    "question": "Где можно посмотреть исчерпывющие данные по примитивным типам данным в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6723",
    "question": "Какой диапазон значений выставлен для типа данных Integer",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6726",
    "question": "Что в Java является самым главным объектом для всех",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6739",
    "question": "Классы от Object наследуются явно или неявно",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6741",
    "question": "Назови 3 любых метода которые приходят от Object",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2425",
    "question": "Как быстро сделать rest сервис",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "6745",
    "question": "Можешь охарактеризовать что такое состояние",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6747",
    "question": "Знаешь ли разницу между StringBuilder и конкатенацией",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6748",
    "question": "Какую задачу решает полиморфизм",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "123",
    "question": "Что такое ограничения в SQL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "6752",
    "question": "Что слышал про статичность типизации в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6754",
    "question": "В чем выражается строка и особенности в java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6756",
    "question": "В чем разница между new string и string",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "53",
    "question": "Где занимался программированием",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "6759",
    "question": "Что подразумевает иммутабельность",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6761",
    "question": "В чём выражает себя строгая типизация в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6763",
    "question": "Какие весовые рамки у integer",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2568",
    "question": "В чем заключаются преимущества использования JDBC",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "6766",
    "question": "Слышал ли про StackOverFlow",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6768",
    "question": "Как бы обосновал то , что интерфейс существует",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6769",
    "question": "Что необходимо для того чтобы клонировать один объект в другой",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2567",
    "question": "Расскажи про JdbcTemplate",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "6773",
    "question": "Каким образом можно обработать исключения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6774",
    "question": "Как бы выбросил наверх исключения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6776",
    "question": "В чём разница между написанием String в двойных \" и вызов NewString",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2424",
    "question": "Разница аннотаций service, repository, controller",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "6779",
    "question": "StringPool -  часть Heap'а или что то отдельное",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6791",
    "question": "Что такое AutoCloseable и конструкция try-with-resources",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6792",
    "question": "В чём разница между Stack и Heap",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2566",
    "question": "Как можно установить соединение с базой данных",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "6797",
    "question": "Слышал ли про новые фишки последних версий Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6799",
    "question": "Как нужно переопределять метод equals",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6803",
    "question": "Слышал ли что то про метод intern",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2565",
    "question": "В чем разница между Statement и PreparedStatement",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "6808",
    "question": "Что такое JDK и JRE",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2423",
    "question": "Какие виды прокси знаешь",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "6812",
    "question": "Каким образом передаются переменные в методы",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2564",
    "question": "Что такое ResultSet",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "2563",
    "question": "В чём разница между методами execute, executeQuary, executeUpdate",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "6817",
    "question": "Знаешь ли что такое статический класс",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6819",
    "question": "Что знаешь про поверхностное копирование",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6822",
    "question": "В чем основная идея рефлексии",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6823",
    "question": "Что такое JRE",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6825",
    "question": "Что такое JDK",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6828",
    "question": "Как разрешаются проблемы дефицита памяти и исключения out of memory exception",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6830",
    "question": "Что такое конструктор java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6832",
    "question": "Что такое инициализационный блок",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "9752",
    "question": "Чем отличаются вертикальный и горизонтальный партишн",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "2422",
    "question": "Как создать singleton-бин при запуске spring приложения",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2562",
    "question": "Как ResultSet устроен внутри",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "9735",
    "question": "Что делает аннотация componentscan",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "2561",
    "question": "Зачем нам нужен ResultSet",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "2421",
    "question": "Что делал на Spring",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "119",
    "question": "Что такое юнит-тестирование",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "2560",
    "question": "Расскажи о разнице execute executeQuary и executeApdate",
    "chance": "6",
    "tag": "JDBC"
  },
  {
    "id": "2559",
    "question": "Что такое Execution Engine",
    "chance": "6",
    "tag": "JVM"
  },
  {
    "id": "2420",
    "question": "Расскажи структуру framework collection",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2558",
    "question": "Что такое Frames",
    "chance": "6",
    "tag": "JVM"
  },
  {
    "id": "2557",
    "question": "Области данных времени выполнения",
    "chance": "6",
    "tag": "JVM"
  },
  {
    "id": "2419",
    "question": "Какие есть способы конфигурирования Spring приложения",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "118",
    "question": "В чем разница между юнит тестами и интеграционными",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "2556",
    "question": "Что такое Classloader",
    "chance": "6",
    "tag": "JVM"
  },
  {
    "id": "2555",
    "question": "Для чего нужна JVM",
    "chance": "6",
    "tag": "JVM"
  },
  {
    "id": "2418",
    "question": "Где используется аннотация Bean",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "2554",
    "question": "Опиши общие практические принципы работы с JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6871",
    "question": "Что такое \"анонимные классы\", где они применяются",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6875",
    "question": "Что произойдет со сборщиком мусора, если выполнение метода finalize() требует ощутимо много времени, или в процессе выполнения будет выброшено исключение",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2553",
    "question": "Какая разница между JSPWriter и сервлетным PrintWriter",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2417",
    "question": "В чем разница RestController и Controller",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "117",
    "question": "Какие тесты пишешь и как",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "28",
    "question": "Как оцениваешь свой уровень",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "55",
    "question": "Расскажи почему ты в Java",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "6873",
    "question": "Для чего используется оператор assert",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6872",
    "question": "Каким образом из вложенного класса получить доступ к полю внешнего класса",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2552",
    "question": "Всегда ли создается объект сессии на JSP странице, можно ли отключить его создание",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6870",
    "question": "Что такое «локальный класс», каковы его особенности",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6869",
    "question": "Какие существуют особенности использования вложенных классов: статических и внутренних, в чем заключается разница между ними",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2551",
    "question": "Можно ли использовать Javascript на JSP странице",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2416",
    "question": "В чем разница аннотаций Repository, Component, Controller, Service",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "6868",
    "question": "Расскажи про вложенные классы, в каких случаях они применяются",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6867",
    "question": "Какие типы классов бывают в java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2550",
    "question": "Как конфигурируется JSP в дескрипторе развертывания",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6866",
    "question": "Где разрешена инициализация статических/нестатических полей",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6975",
    "question": "Что такое capacity",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "6961",
    "question": "По какому принципу увеличивается количество бакетов",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "9731",
    "question": "Какая структура данных лежит в ArrayList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9733",
    "question": "Какие команды знаешь из SQL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "6865",
    "question": "В чем разница между членом экземпляра класса и статическим членом класса",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "9737",
    "question": "Что при сборке может предоставить Maven",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9739",
    "question": "На фоне чего построена Spring Date",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9741",
    "question": "Что такое кеширование",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9744",
    "question": "Какая сложность поиска элемента в LinkedList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9746",
    "question": "Какие есть виды стейтментов в JDBC",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9748",
    "question": "Какие выдвигаются требования к транзакции",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9750",
    "question": "Какое основное преимущество ресурсов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "2549",
    "question": "Как происходит обработка ошибок с помощью JSTL",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "9754",
    "question": "Есть ли противопоказания к использованию индексов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9756",
    "question": "Можно ли сделать приватными переменными в интерфейсе",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9758",
    "question": "Обеспечит ли Stream API RandomAcess",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9760",
    "question": "Есть ли итератор в Stream",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9762",
    "question": "Что мы используем когда пишем for each",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9765",
    "question": "В чем отличие репликации от шарда",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9767",
    "question": "С какими URF  работал",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "2415",
    "question": "Где бы мог использовать prototype",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "9771",
    "question": "Как из класса сделать поток",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9772",
    "question": "На основании какой структуры данных реализованн Linked List",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9773",
    "question": "На основании какой структуры данных реализованн Array List",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "116",
    "question": "Чем отличаются подходы Trunk Based и Feature Branch",
    "chance": "6",
    "tag": "Git"
  },
  {
    "id": "9730",
    "question": "Что такое CAS",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9732",
    "question": "В чем отличие между put и comput",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9734",
    "question": "Какая примерная сложность поиска данных по индексу в бд",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "6864",
    "question": "Можно ли объявить метод абстрактным и статическим одновременно",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "9738",
    "question": "Как работать на Spring",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9740",
    "question": "В чем отличие JPA и Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9742",
    "question": "Что такое fetch type",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9745",
    "question": "Какие есть механизмы для сложных запросов с множеством параметров",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9747",
    "question": "В чем различие видов JDBC",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9749",
    "question": "В чем отличие атомарности и консистентностью",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9751",
    "question": "Класс Number это реальный или абстрактный класс",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "6863",
    "question": "Как получить доступ к переопределенным методам родительского класса",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "9755",
    "question": "Есть опыт работы с облачными сервисами",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9757",
    "question": "С чем работаем внутри Stream",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9759",
    "question": "Какая сущность в коллекциях помогает получать доступ к объектам в коллекции",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "2548",
    "question": "Как можно обработать ошибки JSP страниц",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "9763",
    "question": "Что такое метод recuese в Stream",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "6862",
    "question": "Можно ли сузить уровень доступа/тип возвращаемого значения при переопределении метода",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "9768",
    "question": "Расскажи про уровни кэширования",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "6861",
    "question": "Могут ли нестатические методы перегрузить статические",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2547",
    "question": "Почему не нужно конфигурировать стандартные JSP теги в web.xml",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6980",
    "question": "Почему в ArrayList по индексу искать проще, чем в LinkedList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "6984",
    "question": "Какие есть реализации в коллекции интерфейс листа",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "6987",
    "question": "Что такое связанный список, как структура данных",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "6993",
    "question": "Может ли HashMap сужаться",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "6997",
    "question": "Какая структура данных в коллекции List",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "6999",
    "question": "Чем стэк отличается от очереди",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7001",
    "question": "Что произойдет если мы в момент обхода итератором изменим коллекцию",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7005",
    "question": "Чем отличается comparator от comparable",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7007",
    "question": "Правда ли то что Set может хранить только уникальные значения",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7011",
    "question": "Как можно итерироваться по коллекциям",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7017",
    "question": "Сколько bucket'ов по умолчанию в HashMap'е",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7071",
    "question": "Как сравниваются объекты в HashSet между собой",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7073",
    "question": "Позволяет ли HashSat принимать разнообразного типа данных объекта внутри себя",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7075",
    "question": "Почему ArrayList и массив \"под капотом\" является краеугольным камнем",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7077",
    "question": "Есть у List и Set что-то общее",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7079",
    "question": "В каких случаях лучше ArrayList, а в каких LinkedList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7081",
    "question": "Что такое LinkedList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7085",
    "question": "Что лучше ArrayList или LinkedList, если я хочу удалить элемент из середины таблицы",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7087",
    "question": "Что такое ArrayList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7089",
    "question": "Почему интерфейс Collection и Map не одинаковы , но находяться в одном Framework",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7093",
    "question": "Что интересного в пакете java.util.concurrent",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7095",
    "question": "Базовые реализации List",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7097",
    "question": "Откуда берется минимальное и максимальное значение int",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "7105",
    "question": "С каким функциональным интерфейсом работает метод filter",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "7107",
    "question": "Что такое Supplier",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "7113",
    "question": "Как называются состояния в Hibernate",
    "chance": "6",
    "tag": "Hibernate"
  },
  {
    "id": "2414",
    "question": "Какой по умолчанию scope используется в Spring",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "7117",
    "question": "Как устроены Input и Output Stream",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "6860",
    "question": "Какое исключение выбрасывается при возникновении ошибки в блоке инициализации класса",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "7119",
    "question": "Что такое json",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "6859",
    "question": "Что произойдёт, если в блоке инициализации возникнет исключительная ситуация",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2546",
    "question": "Как сделать перенос строки в HTML средствами JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6858",
    "question": "Для чего в Java используются статические блоки инициализации",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6857",
    "question": "К каким конструкциям Java применим модификатор static",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2545",
    "question": "Приведи пример использования собственных тегов",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2413",
    "question": "Где и когда использовал prototype",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "115",
    "question": "Как слить две разные ветки",
    "chance": "6",
    "tag": "Git"
  },
  {
    "id": "29",
    "question": "На какую позицию хотел бы претендовать",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "6856",
    "question": "Каков порядок вызова конструкторов и блоков инициализации с учётом иерархии классов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6855",
    "question": "Может ли объект получить доступ к private-переменной класса, если, да, то каким образом",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2544",
    "question": "Что знаешь о написании пользовательских JSP тегов",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6854",
    "question": "Что имеет более высокий уровень абстракции - класс, абстрактный класс или интерфейс",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6853",
    "question": "Почему нельзя объявить метод интерфейса с модификатором final",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2543",
    "question": "Как можно расширить функциональность JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "2412",
    "question": "Что будет если в ApplicationContext попробуешь получить один и тот же бин",
    "chance": "6",
    "tag": "Spring"
  },
  {
    "id": "6852",
    "question": "Почему в некоторых интерфейсах вообще не определяют методов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "7136",
    "question": "Зачем нужна программа, которая работает в нескольких потоках, а не в одном",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7137",
    "question": "Зачем нужны однопоточные программы",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "6850",
    "question": "В каких случаях следует использовать абстрактный класс, а в каких интерфейс",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "7139",
    "question": "Что такое Atomic Types, для чего они нужны",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7140",
    "question": "Что такое безопасность потока",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7141",
    "question": "В чем смысл ключевого слова volatile и связанные с ним проблемы",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7142",
    "question": "Какие знаешь базовые способы синхронизации",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "2542",
    "question": "Из каких групп тегов состоит библиотека JSTL",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "7144",
    "question": "Что делает объект интерфейс runnable",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7145",
    "question": "В чём отличие между Runnable и  Cаllable",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7147",
    "question": "Что делает метод wait",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7148",
    "question": "Что такое поток \"демон\"",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "7149",
    "question": "В чём смысл ReadWRiteLock",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "6848",
    "question": "Какие модификаторы по умолчанию имеют поля и методы интерфейсов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6847",
    "question": "Где и для чего используется модификатор abstract",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2541",
    "question": "Что такое JSTL, JSP Standard tag library",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "114",
    "question": "Какие знаешь общие стратегии ветвления",
    "chance": "6",
    "tag": "Git"
  },
  {
    "id": "6845",
    "question": "Какие побитовые операции знаешь",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6843",
    "question": "Что такое тернарный оператор выбора",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2540",
    "question": "Назови неявные, внутренние объекты JSP EL и их отличия от объектов JSP",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6842",
    "question": "Какие логические операции и операторы знаешь",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6840",
    "question": "Что знаешь о функции main()",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "2539",
    "question": "Какие типы EL операторов знаешь",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "6838",
    "question": "Какими значениями инициализируются переменные по умолчанию",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6836",
    "question": "Какие есть исключения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6835",
    "question": "В чем заключается и как используется клонирование объектов, массивов и двумерных массивов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "6833",
    "question": "Что такое autoboxing",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "7168",
    "question": "Какие есть минусы в индексе",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7169",
    "question": "Что такое первичный и внешние ключи и какие ограничения существуют",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7170",
    "question": "Что такое денормализация баз данных",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7171",
    "question": "В чем заключается идея foreign key",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7172",
    "question": "В чем разница JPQL и HQL",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7173",
    "question": "Что такое реляционная модель данных",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7174",
    "question": "Какие возникают аномалии при выполнении параллельных транзакций",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7175",
    "question": "Что такое репликация баз данных",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7176",
    "question": "Как хранил данные в проектах",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7177",
    "question": "Как бы реализовал отправку сообщения клиенту, учитывая возможность отмены транзакции",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7178",
    "question": "Как избежать того, что пакет данных может отправится два раза",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7179",
    "question": "Какие базы данных использовал",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7180",
    "question": "Какие есть ограничения на ключи",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7181",
    "question": "Где использовал аннотацию transactional",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7182",
    "question": "Почему база данных лучше текстового файла",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7183",
    "question": "Что такое индексирование",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7184",
    "question": "Какие типы запросов знаешь",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7185",
    "question": "Слышал ли что-то про dml и ddl",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7186",
    "question": "Назови краткий перечень из трех ограничений",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7187",
    "question": "В чем смысл второй нормальной формы",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7188",
    "question": "Опиши форму кода",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7189",
    "question": "Что мы чаще всего используем в совокупности в агрегационными запросами",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7190",
    "question": "Что выполняется раньше where или join",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7191",
    "question": "Каким образом можешь добавить ограничения",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7192",
    "question": "При помощи чего мы можем указать constraint",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7193",
    "question": "Что такое диаграммы Венна",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7194",
    "question": "Как в базу данных добавить ограничения",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7195",
    "question": "В чём идея join",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7196",
    "question": "Что слышал про оператор Exists",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7197",
    "question": "Расскажи прервую и вторую форму нормализации",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "7198",
    "question": "Что такое конструктор для копирования",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7199",
    "question": "В чем идея Builder'а",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7200",
    "question": "К чему применяется Unique",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7201",
    "question": "Primari Key уникалный, или может дублироваться",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "2538",
    "question": "Что знаешь о Языке выражений JSP ,JSP Expression Language – EL",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "7203",
    "question": "Что лежит в основе Spring Framework",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7204",
    "question": "Можно ли внедрять зависимость не только через конструктор",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7205",
    "question": "Что выполняется раньше : конструктор , Setter или поле внедрения",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "2537",
    "question": "Можно ли определить класс внутри JSP страницы",
    "chance": "6",
    "tag": "Servlets"
  },
  {
    "id": "7207",
    "question": "Что означают отношения \"являюсь\" и \"имею\" в ООП",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7208",
    "question": "Где лучше применять наследования и ассоциацию",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7209",
    "question": "В чем разница между классом, объектом и интерфейсом",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "113",
    "question": "Зачем нужны системы контроля версий?",
    "chance": "6",
    "tag": "Git"
  },
  {
    "id": "7211",
    "question": "Почему throws в сигнатуре метода плохо",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7212",
    "question": "Как правильно выбрасывать исключения",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7213",
    "question": "Почему выбрасывать RuntimeException плохо",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7214",
    "question": "Расскажи про класс File и его устройство",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7215",
    "question": "Как избежать принудительную обработку IOException",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7216",
    "question": "Что такое атомарность и консистентность",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7217",
    "question": "Почему Java Memory Model важно при работе с многопоточностью",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7218",
    "question": "В чем разница Synchronized и Lock",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7219",
    "question": "Что такое Callable",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7220",
    "question": "Преимущества реализации ExecutorService",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7221",
    "question": "Почему появился HashMap",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7222",
    "question": "Почему плохо делать ключом массив байтов для HashMap",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7223",
    "question": "В чем проблема HashTable",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7224",
    "question": "Что такое автоматическая инкрементация в разных БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7225",
    "question": "Какие есть уровни изоляции в SQL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7226",
    "question": "Расскажи про идею фреймворка Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7227",
    "question": "Какие виды связи в Hibernate есть",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7228",
    "question": "Какие есть аннотации для создания бинов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7229",
    "question": "Какая ценность аннотации Bean",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7230",
    "question": "Что такое BeanDefinition и зачем он нужен",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7231",
    "question": "Как из Spring-приложения обратиться к другому сервису",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7232",
    "question": "В чем ценность Spring Boot",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7233",
    "question": "Какие распростаненные стартеры знаешь в Spring Boot",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7234",
    "question": "Надо ли обязательно отлавливать throws",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7235",
    "question": "Для чего нужна инкапсуляция",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7236",
    "question": "Stack , долгосрочное ли это хранилище",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7237",
    "question": "Как можно сравнивать между собой типы данных",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7238",
    "question": "Как примитивные типы данных можно сравнить между собой",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7239",
    "question": "Слышал ли что то про статиеские методы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7240",
    "question": "Почему Equals нужно переопределять и для чего",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7241",
    "question": "Какие основные реализации листовых коллекций",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "7242",
    "question": "На что похож Вектор",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "30",
    "question": "Расскажи о том как ты понимаешь принципы SOLID исходя из своего опыта",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "9778",
    "question": "В чем преимущество hibernate перед jbc",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9779",
    "question": "Что такое кеширование в hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9780",
    "question": "Есть опыт написания тестов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9781",
    "question": "Знаком с принципами масштабирования системы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9782",
    "question": "Что такое докер",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9783",
    "question": "С чем работал с точки зрения security",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9784",
    "question": "Из скольки частей состоит JVTToken",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9785",
    "question": "В чем особенность Spring Boot",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9786",
    "question": "Какие виды тестов знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9787",
    "question": "Что содержит задача которая пришла от аналитиков",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9788",
    "question": "Что такое метод main",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9789",
    "question": "Что дает слово static",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9790",
    "question": "Почему main считается статическим",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9791",
    "question": "Что такое массивы в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9792",
    "question": "Какой класс реализует динамический массив в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9793",
    "question": "За счет чего NIO обеспечивает неблокируемый доступ к ресурсам",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9794",
    "question": "В чем особенность CopyOnWriteArrayList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9795",
    "question": "Что такое Stream в контекстке Stream API",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9796",
    "question": "Что принимает в себя ExecutorService на исполнение",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9797",
    "question": "Что понимается под буквой О в SOLID",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9798",
    "question": "Какие отличия между шаблонами ООП Стратегия и Состояние",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9799",
    "question": "Что такое адаптер",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9800",
    "question": "Что такое группировка в БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9801",
    "question": "Какие основные реаллизации ORM знаешь в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9802",
    "question": "Какие уровни кэширования есть в Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9803",
    "question": "Что такое Docker",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9804",
    "question": "В чем отличие Докера от виртуальной машины",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9805",
    "question": "Как устроена память JVM",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9806",
    "question": "Что такое стеки",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9807",
    "question": "Как переходят данные между стеком и хит",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9808",
    "question": "Что такое сборка мусора",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9809",
    "question": "Что такое многопоточность, параллелизм и асинхронность",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9810",
    "question": "Для чего нужны классы Future и CompletableFuture",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9811",
    "question": "Что находится под буквой L в принципах SOLID",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9812",
    "question": "Что такое Result Set в JDBC",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9813",
    "question": "Особенности Result Set в JDBC и его конфигурации",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9814",
    "question": "Что такое SessionFactory  в Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9815",
    "question": "Расскажи про управление уровнями изоляции транзакций в Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9816",
    "question": "Что есть в иерархии Collections API",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9817",
    "question": "Класс TreeMap, какая стркутра данных лежит в основе",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9818",
    "question": "Какая сложность бинарного поиска",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9819",
    "question": "Зачем нужно future",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9820",
    "question": "Зачем нужен CompletableFuture",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9821",
    "question": "JDBC это реализация или спецификация",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9822",
    "question": "Зачем подгружать драйвер БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9823",
    "question": "Что такое statement",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9824",
    "question": "Какие виды statement есть",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9825",
    "question": "Что такое JPA",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9826",
    "question": "Что такое n+1 select проблема",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9827",
    "question": "Варианты использования final",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9828",
    "question": "Что такое интерфейс itterable",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9829",
    "question": "Что такое REST API",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9830",
    "question": "В чем отличие функционального подхода и объектно-ориентированного",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9831",
    "question": "Что такое передача параметров в Java и как это происходит",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9832",
    "question": "К какому принципу ООП относится переопределение методов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9833",
    "question": "Что такое объекты immutable",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9834",
    "question": "С каким функциональным интерфейсом мы работаем в методе map()",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9835",
    "question": "Что такое Named Query в Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9836",
    "question": "Что такое BeanPostProcessor",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9837",
    "question": "Что такое bean scope",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9838",
    "question": "Какие виды scope существуют",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9839",
    "question": "Что делает фреймворк Spring",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9840",
    "question": "Что такое IoC и DI",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9841",
    "question": "Чем отличается обычный объект от Bean",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9842",
    "question": "Что такое Maven",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9843",
    "question": "Для чего используем модификаторы доступа",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9844",
    "question": "Правильное ли высказываение что массив String, это массив char",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9845",
    "question": "Какие существуют ключевые классы exception",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9846",
    "question": "Как можно обработать исключения",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9847",
    "question": "Что такое фантомное чтение",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9848",
    "question": "Что означает fetchtype lazy",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9849",
    "question": "Какие сущности учавствуют в создании Bean",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9850",
    "question": "Что такое асинхронность",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9851",
    "question": "В чем преимущества композиции в ООП",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9852",
    "question": "К чему может привести нарушение принципов SOLID",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9853",
    "question": "Какие существуют имлементации интерфейса List",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9854",
    "question": "Когда стоит использовать LinkedList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9855",
    "question": "Чем обусловлен диапазон допустимых значений \"примитивов\"",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9856",
    "question": "Что делает метод peek()",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9857",
    "question": "Как работает механизм CAS",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9858",
    "question": "Что дает принцип инкапсуляции в реальных системах",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9859",
    "question": "Расскажи про третью нормальную форму",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9860",
    "question": "Какая основная задача кэширования в ORM",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9861",
    "question": "Какие сложности могут возникать при работе с кэшированием",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9862",
    "question": "Какую проблему решает Framework Spring",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9863",
    "question": "Назов отличие ООП от функционального программирования",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9864",
    "question": "Что такое композиция",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9865",
    "question": "В чем преимущества композиции",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9866",
    "question": "Как понимаешь interface segregation",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9867",
    "question": "Что такое dependency inversion",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9868",
    "question": "Что такое ковариантность типов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9869",
    "question": "Как можно сделать класс неизменяемым",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9870",
    "question": "Какая сложность поиска метода по ключу в коллекции TreeMap",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9871",
    "question": "Что делает метод peek в StreamApi",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9872",
    "question": "Какой интерфейс получаем в методе forEach()",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9873",
    "question": "Где хранятся статические методы в памяти JVM",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9874",
    "question": "Как оптимизировать работу Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9875",
    "question": "Как идеально организовать процесс CI/CD",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9876",
    "question": "Почему запрещено множественное наследование",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9877",
    "question": "Когда происходит коллизия hashcode в HashMap",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9878",
    "question": "Что такое функциональная парадигма",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9879",
    "question": "Что стоит в центре парадигмы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9880",
    "question": "Что такое Callable",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9881",
    "question": "В чем смысл многопоточности",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9882",
    "question": "К чему может привести нарушение нормализации",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9883",
    "question": "Как инициализируются бины в Spring",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9884",
    "question": "Что делает аннотация Transactional в Spring Data",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9885",
    "question": "Что такое механизм CAS",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9886",
    "question": "Чем отличается optimistic и pessimistic lock в Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9887",
    "question": "Какие знаешь потокобезопасные коллекции в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9888",
    "question": "В чем особоенность LinkedHashMap",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9889",
    "question": "Что лежит \"под капотом\" parallelStream()",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9890",
    "question": "Расскажи про способы оптимизации запросов в БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9891",
    "question": "Какая алгоритмическая сложность поиска элемента по индексу",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9892",
    "question": "Чем отличается JOIN от UNION",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9893",
    "question": "Расскажи про Problem n+1 в Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9894",
    "question": "Что такое ApplicationContext в Spring",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9895",
    "question": "Как бы реализовал интеграционное тестирование",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9896",
    "question": "Где хранятся статические методы и переменные",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9897",
    "question": "Где хранятся объекты",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9898",
    "question": "Что такое \"мусор\" с точки зрения JVM",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9899",
    "question": "Что такое механизм CAS",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9900",
    "question": "Какие группы команд есть в SQL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9901",
    "question": "Что такое уровни изоляции транзаций",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9902",
    "question": "Как происходит обработка запроса(HttpServlet)",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9903",
    "question": "Чем отличается композиция от наследования",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9904",
    "question": "Механизмы реализации полиморфизма",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9905",
    "question": "Что такое неизменяемые классы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9906",
    "question": "Какая сложность вставки элемента в LinkedList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9907",
    "question": "Чем отличается волатильность от атомарности",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9908",
    "question": "N+1 problem, пути решения в Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9909",
    "question": "Что такое уровни пропагации транзакций в Spring Data",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9910",
    "question": "Что такое идемпотентный метод в Spring Data",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9911",
    "question": "Что такое CAP теорема",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9912",
    "question": "Чем объект отличается от примитива",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9913",
    "question": "Какие алгоритмы поиска элемента по массиву известны",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9914",
    "question": "Расскажи про концепцию класса CompletableFuture",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9915",
    "question": "Для чего может пригодиться шаблон проектирования цепочка ответственности",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9916",
    "question": "Bean это класс или объект",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9917",
    "question": "Что такое уровни propagation в транзакциях",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9918",
    "question": "Что такое идепатентность метода",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9919",
    "question": "Что такое идепатентность метода",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9920",
    "question": "Расскажите о себе, какие цели ставите",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9921",
    "question": "Какой  диапазон допустимых значений для типа данных short",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9922",
    "question": "Чем отличается примитив short от class short",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9923",
    "question": "Как java понимает generics",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9924",
    "question": "Какую идею реализует ArrayList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9925",
    "question": "Что означает транзиентный в java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9926",
    "question": "Что означает транзиентный в java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9927",
    "question": "Какую идею реализует LinkedList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9928",
    "question": "Какая сложность вставки элемента в LinkedList",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9929",
    "question": "Для чего нужен интерфейс Comparable",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9930",
    "question": "К чему может привести нарушение нормализации данных",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9931",
    "question": "К чему можно приминить final",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9932",
    "question": "Что такое LinkedHashSet",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9933",
    "question": "Что такое HashSet",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9934",
    "question": "Что делает Phaser",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9935",
    "question": "Для чего  нужны scope Bean",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9936",
    "question": "Что такое socket",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9937",
    "question": "Для чего используется шаблон \"Стратегия\"",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9938",
    "question": "Что-то изучал кроме Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9939",
    "question": "Как понимаешь фразу Java это ООП",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9940",
    "question": "Массив это примитив или объект",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9941",
    "question": "Какая сложность добавления элемента в Array List",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9942",
    "question": "Какой знаешь максимально эффективный способ копирования массива",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9943",
    "question": "Что такое коллизия хэшкодов с точки зрения HashMap",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9944",
    "question": "Какую проблему решает валатайл",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9945",
    "question": "Какие задачи решаются с помощью join",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9946",
    "question": "Как подружить БД с приложением Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9947",
    "question": "Как называется документ в котором я могу посмотреть все про JDBC",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9948",
    "question": "Какие виды запросов я могу выполнять с помощью Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9949",
    "question": "Для сложных запросов где много параментров что нужно использовать",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9950",
    "question": "Что происходит от момента запуска Spring приложения до первого запроса в Postman",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9951",
    "question": "В чем отличие HashMap от HashSet",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9952",
    "question": "Что такое Spring Data Repository",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9953",
    "question": "Что такое Spring Data Specification",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9954",
    "question": "В чем отличия компонентных аннотаций",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9955",
    "question": "Чем отличается конфигурация от компонента",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9956",
    "question": "Что такое аннотация @Transactional",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9957",
    "question": "Что будет если в методе вызвать метод аннотации @Transactional",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9958",
    "question": "В чем разница @Controller и @RеstController",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9959",
    "question": "Как эффективно идентифицировать непроизводительные sql – запросы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9960",
    "question": "Как бороться с аномалиями при выполнения транзакций",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9961",
    "question": "Что такое Message Broker",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9962",
    "question": "Что такое асинхронные сообщения",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9963",
    "question": "Что такое не блокирующие алгоритмы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9964",
    "question": "В чем разница между Mono и Flux",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9965",
    "question": "Что будет если применить Volatile в объектах",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9966",
    "question": "Как обеспечить синхронизацию в многопоточной среде",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9967",
    "question": "Что такое блок synhronized  в java и какие там проблемы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9968",
    "question": "Что такое шаблон Database-per-Service",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9969",
    "question": "ЧТо такое шаблон Even Sourcing",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9970",
    "question": "Какие задачи решает Distributed Tracing",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9971",
    "question": "Как выбрать стратегию, шаблон",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9972",
    "question": "Как себя поведёт prototype bean в рамках Singleton",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9973",
    "question": "Чем пользуешься в качестве трекинга ваших задач",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9974",
    "question": "Какие используешь flo при работе с task",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9975",
    "question": "Расскажи разницу между интерфейсом List и Set",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9976",
    "question": "Что такое экзекьютер-сервис",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9977",
    "question": "Что за исключение Interrupted Exception",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9978",
    "question": "Какие знаешь аннотации для создания бинов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9979",
    "question": "Что такое пропагация и распостранение транзакции",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9980",
    "question": "Кратко расскажи о своих проектах",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9981",
    "question": "Зачем нужно наследование",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9982",
    "question": "Какие есть альтернативы наследованию",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9983",
    "question": "Почему композицию чаще рекомендуют использовать, чем наследование",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9984",
    "question": "В чём основная идея адаптера",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9985",
    "question": "В чём идея  Autoboxing и Unboxing",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9986",
    "question": "Что нужно сделать , для того чтобы создать имутабельный класс в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9987",
    "question": "Базовые отличия между List и Linked List",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9988",
    "question": "Какие способы обработки есть проверяемых исключений",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9989",
    "question": "Что такое try/catch",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9990",
    "question": "Возможно ли написание try без catch",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9991",
    "question": "Какие формы написания try/catch знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9992",
    "question": "В чём такая важность Stack Trace в исключениях",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9993",
    "question": "Что понимается под контекстом ошибки",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9994",
    "question": "Что такое констистентность и атамарность",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9995",
    "question": "Можно ли управлять монитором",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9996",
    "question": "Что такое парометеризированный тип",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9997",
    "question": "Есть ли конструктор у статического класса",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9998",
    "question": "Как создать статический дженерический метод",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "9999",
    "question": "Что  в Java означает два типа исключений",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10000",
    "question": "Какие способы обработки в Java существуют",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10001",
    "question": "Почему обязательно закрывать ресурс",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10002",
    "question": "Можно ли запускать Java приложение , имея только JRE",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10003",
    "question": "Что такое ODBC",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10004",
    "question": "Что означает статик в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10005",
    "question": "В чём разница между Exception и Erorr",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10006",
    "question": "Передача данных в Java идет по ссылке или по значению",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10007",
    "question": "Что означает передача по значению",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10008",
    "question": "Зачем нужны имутабельные классы и их основные характеристики",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10009",
    "question": "В чём проявляется изоляция или её отсутствие",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10010",
    "question": "Можно ли понижать уровень модификатора доступа",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10011",
    "question": "Какие основные три метода есть у Servlet и в чем их задача",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10012",
    "question": "Как работает Servlet в многопоточном режиме",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10013",
    "question": "ArrayList , какая скорость доступа к последнему элементу",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10014",
    "question": "В чём различие между PreparedStatement и Statement",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10015",
    "question": "Какие есть отношения в БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10016",
    "question": "Что такое One to One",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10017",
    "question": "Приведи пример One to Many",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10018",
    "question": "Какие два основных вида целостности данных знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10019",
    "question": "Какие виды констрейнтов знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10020",
    "question": "Что такое DDL,DML,DCL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10021",
    "question": "Как бороться в БД с SQL Injection",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10022",
    "question": "В чём разница между Union и Union All",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10023",
    "question": "В чём основные ограничения при работе с операцией Union",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10024",
    "question": "Что такое Commit в SQL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10025",
    "question": "К какой проблеме может привести отстутствие транзакции",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10026",
    "question": "В чем принцип абстракции",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10027",
    "question": "В чем разница между абстракцией и полиморфизмом",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10028",
    "question": "В чем разница race condition и data race",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10029",
    "question": "Какие способы синхронизации в java знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10030",
    "question": "В чем разница между dependency injection и dependency inversion",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10031",
    "question": "Что такое dispatchers roulette",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10032",
    "question": "В чем разница между наследованием и полиморфизмом",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10033",
    "question": "ЧТо такое программирование по контракту",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10034",
    "question": "Почему так важно иметь контракт в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10035",
    "question": "Какие основные два вида реализации SingleTone знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10036",
    "question": "Что такое декоратор",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10037",
    "question": "Для чего нужен декоратор",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10038",
    "question": "Что означает рефлексивность",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10039",
    "question": "Что означает симметричность",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10040",
    "question": "Почему объекты попадают в stringpoll",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10041",
    "question": "Как объекты попадают в stringpoll",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10042",
    "question": "В чем проблема конкатенации строк в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10043",
    "question": "Каким образом StringBuilder решает проблему конкатенации",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10044",
    "question": "Быстрее ли StringBuilder чем StringBuffer если убрать синхронизацию",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10045",
    "question": "В чем причина существования Map как структуры данных и Collection в CollectionFramework",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10046",
    "question": "Какое основное призвание интерфейса Map",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10047",
    "question": "Какие есть базовые реализации InputOutput Stram'ов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10048",
    "question": "Какая самая минимальная единица для работы с потоками",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10049",
    "question": "В чем прогрессивность NIO",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10050",
    "question": "В чем смысл буферизированных потоков",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10051",
    "question": "В чем преимущество буферизации",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10052",
    "question": "В чем преимущество буферизации",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10054",
    "question": "Что будет если мы попытаемся изменить значение приватной переменной",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10055",
    "question": "В чем разница в аспектах между advice и point",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10056",
    "question": "В чем разница в аспектах между advice и point",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10057",
    "question": "Почему логирование очень часто связывают с аспектами",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10058",
    "question": "Приведи пример реляционной базы данных и нереляционной",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10059",
    "question": "В чем смысл ограничений",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10060",
    "question": "Какие бывают ограничения",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10061",
    "question": "Чем достигается скорость доступа в SQL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10062",
    "question": "Primary Key является индексом и почему",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10063",
    "question": "Какими ограничениями обладает PrimaryKey",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10064",
    "question": "Что такое принцип asset",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10065",
    "question": "Какие знаешь негативные феномены в SQL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10066",
    "question": "Что подразумевается под DirtyRead",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10067",
    "question": "Какие виды конфигураций знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10068",
    "question": "Почему нужно использовать конфигурацию через аннотации, и не стоит использовать аанотацию через конфигурацию",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10069",
    "question": "В каких случаях бы применял Java конфигурацию",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10070",
    "question": "Какие знаешь аннотации для сообщения Spring'у, чтобы он создал на основании этих аннотаций bean",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10071",
    "question": "В чем особенность dependcy injection",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10072",
    "question": "Что такое Spring Data",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10073",
    "question": "Чем отличается Spring Data от Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10074",
    "question": "Как у класса заполнить атрибуты",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10075",
    "question": "Что такое формат хранения данных json",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10076",
    "question": "Что характерно для html",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10077",
    "question": "Что такое select из SQL",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10078",
    "question": "Как сделать свой первый коммит, добавить все файлы",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10079",
    "question": "Как можно сделать связь с удаленным репозиторием",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10053",
    "question": "Как работает try-catch",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10080",
    "question": "Как скачать изменения с удаленного репозитория",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10081",
    "question": "Что такое Spring",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10082",
    "question": "Что дает модуель Spring Core",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10083",
    "question": "try catch with resources что это такое",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10084",
    "question": "Для чего нужен Git",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10085",
    "question": "Какие команды Git знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10086",
    "question": "Что такое Map",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10087",
    "question": "Может ли быть ключом примитив",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10088",
    "question": "Ключи в Map могут повторяться",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10089",
    "question": "Какие есть структуры данных из collection",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10090",
    "question": "Что такое Set",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10091",
    "question": "Что такое List",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10092",
    "question": "В чем отличие List от Set",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10093",
    "question": "Что такое Q и DQ",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10094",
    "question": "Реализует ли LinkedList интерфейсы Q/DQ",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10095",
    "question": "Что такое временная сложность",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10096",
    "question": "Что такое классы Exception, какие существуют виды",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10097",
    "question": "От чего наследуется Exception",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10098",
    "question": "Зачем нужны stream",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10099",
    "question": "Stream api какую парадигму использует",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10100",
    "question": "Какие есть виды stream",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10101",
    "question": "Может ли быть в интерфейсе приватный метод",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10102",
    "question": "Как называется функциональный интерфейс который принимает в себя фильтр",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10103",
    "question": "Что делает collect",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10104",
    "question": "Можно ли в Map преобразовать коллекцию",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10105",
    "question": "Может ли быть в интерфейсе конструктор",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10106",
    "question": "Перегрузка метода что это означает",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10107",
    "question": "Что такое сигнатура",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10108",
    "question": "Есть string, string builder, string buffer что это такое",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10109",
    "question": "Какой жизененный цикл Maven",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10110",
    "question": "Что такое ioc контейнер",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10111",
    "question": "Что знаешь про аннотацию predestroy",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10112",
    "question": "Что дает аннотация service",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10113",
    "question": "Что такое spring web",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10114",
    "question": "Что такое Mock, Stab, Spy",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10115",
    "question": "Как связать класс с бд",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10116",
    "question": "Lazy vs eager загрузка, в чем отличие",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10117",
    "question": "Зачем сделали разделение типов данных на int, long",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10118",
    "question": "В чем идея примитивных типов данных",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10119",
    "question": "Для чего нужны паттерны программирования",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10120",
    "question": "Что такое контейнер",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10121",
    "question": "Что такое внедрение зависимости",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10122",
    "question": "В чем отличие Spring Boot от Spring Context",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10123",
    "question": "Какая аннотация позволяет понять что поднимаются бины",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10124",
    "question": "Как подключить свою библиотеку в другом проекте",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10125",
    "question": "Какие должны быть условия чтобы база данных считалось реляционной",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10126",
    "question": "Как запретить оставлять пустую колонку",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10127",
    "question": "Зачем нужны ветки в git",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10128",
    "question": "Как посмотреть версию предыдущего коммита",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10129",
    "question": "Какие есть виды объединения веток",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10130",
    "question": "Как найти ошибку в программе",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10131",
    "question": "Как можно протестировать программу и обезопасить себя от ошибок",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10132",
    "question": "Какие типы циклов знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10133",
    "question": "Чем циклы отличаются друг от друга",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10134",
    "question": "Расскажи кратко с какими фреймворками работал",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10135",
    "question": "Что из литературы по Java читал",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10136",
    "question": "Какую литературу читал не по Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10137",
    "question": "Использовал ли java.util.concords в java 5",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10138",
    "question": "Что в последние время узнал или прочитал, что можешь посоветовать",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10139",
    "question": "Расскажи кратко чем занимался в программировании",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10140",
    "question": "Расскажи о своем опыте перевода проекта на Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10141",
    "question": "Что делать если в базе данных нет RIGHT JOIN, а есть LEFT JOIN",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10456",
    "question": "Что такое BDD",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10142",
    "question": "Какие существуют стратегии слияния с точки зрения разработчика баз данных",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10143",
    "question": "Как бы реализовывал таблицу в БД на 100 миллионов записей, с поиском по колонке int32",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10144",
    "question": "Как осуществить быстрый поиск без сортировки int массива на миллионы значений",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10145",
    "question": "Что думаете о проверяемом типе исключений в Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10146",
    "question": "Если бы разрабатывал библиотеку для работы с HTTP использовал бы исключения или что-то другое",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10147",
    "question": "Для чего нужны пулы соединений в БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10148",
    "question": "Как работает метод Close при работе с пуллом соединения к БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10149",
    "question": "Использовали Kotlin",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10150",
    "question": "Что бы хотел убрать из языка Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10151",
    "question": "Cталкивался ли с content",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10152",
    "question": "Делал ли какие-то проекты с многими потоками",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10153",
    "question": "Какие виды переменных бывают в java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10154",
    "question": "Какие элементы Java отвечают за наследование",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10155",
    "question": "Что такое переопределение метода",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10156",
    "question": "Что такое класс POJO",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10157",
    "question": "Чем JPA отличаеться от Hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10158",
    "question": "Может ли Entity класс быть абстрактным",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10159",
    "question": "Что такое Exception",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10160",
    "question": "Расскажи о своих успехах в программировании",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10161",
    "question": "Как можно оптимизировать высоконагруженный веб-сервис",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10162",
    "question": "Какими инструментами пользовался помимо Java",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10163",
    "question": "Что такое branch в Git",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10164",
    "question": "Как проверяешь, что твоя программа работает корректно",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10165",
    "question": "У нас есть веб-сервис и в логах написано \"record not found\" - как разбираться",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10166",
    "question": "Пользователь пришел и говорит, что данные не отображаются, твои действия",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10167",
    "question": "Нужна кнопка \"удалить отчет из системы\", твои  действия",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10168",
    "question": "Какое расстояние между Луной и Землей",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10169",
    "question": "Какие принципы программирования, помогающие писать красивый код знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10170",
    "question": "Расскажи про интерфейс segregation",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10171",
    "question": "Что такое методы HTTP",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10172",
    "question": "Какие есть методы HTTP запросов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10173",
    "question": "В чем разница между методами HTTP запросов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10174",
    "question": "Что такое сильная и слабая связанности в понимании кода",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10175",
    "question": "Что такое Atomic Types и для чего они нужны",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10176",
    "question": "Что такое интерфейсы-маркеры и почему их сейчас не создают",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10177",
    "question": "Какое эволюционное развитие получили интерфейсы-маркеры и что их заменило",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10178",
    "question": "С какой целью применяется сериализация",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10179",
    "question": "Что такое принцип PECS и как он используется",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10180",
    "question": "Зачем могут понадобится на практике immutable объекты",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10181",
    "question": "Что такое обработка ошибок",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10182",
    "question": "Что делать если вылетел Error, можем ли мы его поймать и как-то обработать",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10183",
    "question": "Известно, что при вызове метода А будет выдаваться исключение, твои действия",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10184",
    "question": "Как в однопоточной программе получить cant convert modification exception при работе с коллекцией",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10185",
    "question": "Стримы, какие есть операции и типы операций",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10186",
    "question": "Какие функциональные интерфейсы знаешь",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10187",
    "question": "Чем отличаются default-методы от static-методов",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10188",
    "question": "Какие знаешь типы баз данных",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10189",
    "question": "В чем преимущества и недостатки типов баз данных",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10190",
    "question": "Что такое нормализация данных в реляционной БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10191",
    "question": "Расскажи о синтаксисе создания таблицы в реляционной БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10192",
    "question": "Как изменить таблицу в реляционной БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10193",
    "question": "Знаешь что такое план запроса в реляционной БД",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10194",
    "question": "Как работает Spring \"под капотом\"",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10195",
    "question": "Зачем нужен hibernate",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10196",
    "question": "Что лучше использовать JOIN или подзапросы",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10197",
    "question": "Для чего используется оператор ORDER BY",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10198",
    "question": "Как GROUP BY обрабатывает значение NULL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10199",
    "question": "Перечисли основные агрегатные функции",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10200",
    "question": "В чем разница между COUNT(*) и COUNT({column})",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10201",
    "question": "Для чего используются операторы IN, BETWEEN, LIKE",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10202",
    "question": "Для чего применяется ключевое слово UNION",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10203",
    "question": "Какие отличия между ограничениями PRIMARY и UNIQUE",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10204",
    "question": "Может ли значение в столбце, на который наложено ограничение FOREIGN KEY, равняться NULL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10205",
    "question": "Как создать индекс",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10206",
    "question": "В чем отличие между операторами DELETE и TRUNCATE",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10207",
    "question": "Опиши разницу типов данных DATETIME и TIMESTAMP",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10208",
    "question": "Какое назначение у операторов PIVOT и UNPIVOT в Transact-SQL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10209",
    "question": "Расскажи об основных функциях ранжирования в Transact-SQL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10210",
    "question": "Для чего используются операторы INTERSECT, EXCEPT в Transact-SQL",
    "chance": "6",
    "tag": "SQL"
  },
  {
    "id": "10211",
    "question": "Что такое «анонимные классы», где они применяются",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10212",
    "question": "Для чего нужна денормализация",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10213",
    "question": "Criteria API",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10214",
    "question": "Что такое HQL",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10215",
    "question": "Верно ли утверждение, что примитивные типы данных всегда хранятся в стеке, а экземпляры ссылочных типов данных в куче",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10216",
    "question": "Расскажи про приведение типов, что такое понижение и повышение типа",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10217",
    "question": "Когда в приложении может быть выброшено исключение ClassCastException",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10218",
    "question": "Что такое литералы",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10219",
    "question": "Почему String неизменяемый и финализированный класс",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10220",
    "question": "Почему char[] предпочтительнее String для хранения пароля",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10221",
    "question": "Почему строка является популярным ключом в HashMap в Java",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10222",
    "question": "Можно ли использовать строки в конструкции switch",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10223",
    "question": "Почему метод clone() объявлен в классе Object, а не в интерфейсе Cloneable",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10224",
    "question": "Что такое «конструктор по умолчанию»",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10225",
    "question": "Чем отличаются конструкторы по-умолчанию, копирования и конструктор с параметрами",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10226",
    "question": "Где и как можешь использовать закрытый конструктор",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10227",
    "question": "Расскажи про классы-загрузчики и про динамическую загрузку классов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10228",
    "question": "Equals() порождает отношение эквивалентности, какими свойствами обладает такое отношение",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10229",
    "question": "Каким образом реализованы методы hashCode() и equals() в классе Object",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10230",
    "question": "Есть ли какие-либо рекомендации о том, какие поля следует использовать при подсчете hashCode()",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10231",
    "question": "Какой оператор позволяет принудительно выбросить исключение",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10232",
    "question": "О чем говорит ключевое слово throws",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10233",
    "question": "Как написать собственное («пользовательское») исключение",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10234",
    "question": "Какие существуют unchecked exception",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10235",
    "question": "Что такое Error",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10236",
    "question": "Может ли один блок catch отлавливать сразу несколько исключений",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10237",
    "question": "Всегда ли исполняется блок finally",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10238",
    "question": "Существуют ли ситуации, когда блок finally не будет выполнен",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10239",
    "question": "Может ли метод main выбросить исключение во вне и если да, то где будет происходить обработка данного исключения",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10240",
    "question": "Что такое «интернационализация»",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10241",
    "question": "Что такое «локализация»",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10242",
    "question": "Отличия SoftReference от WeakReference",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10243",
    "question": "Как написать immutable класс",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10244",
    "question": "Промежуточные операции в Stream API",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10245",
    "question": "Жизненный цикл сервлетов",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10246",
    "question": "Что такое default method в Interface",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10247",
    "question": "Использование оператора instanceof",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10248",
    "question": "Всегда ли добавление в ArrayList имеет сложность O(1)",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10249",
    "question": "Всегда ли в Java существовали дженерики",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10250",
    "question": "Что такое wildcards",
    "chance": "6",
    "tag": "Java Core"
  },
  {
    "id": "10251",
    "question": "Назови основные интерфейсы JCF и их реализации",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10252",
    "question": "В чем разница между классами java.util.Collection и java.util.Collections",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10253",
    "question": "Приведите примеры итераторов реализующих поведение fail-safe",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10254",
    "question": "Чем различаются Enumeration и Iterator",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10255",
    "question": "Как между собой связаны Iterable и Iterator",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10256",
    "question": "Как между собой связаны Iterable, Iterator и «for-each»",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10257",
    "question": "Сравни Iterator и ListIterator.",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10258",
    "question": "Что произойдет при вызове Iterator.next() без предварительного вызова Iterator.hasNext()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10259",
    "question": "Как поведёт себя коллекция, если вызвать iterator.remove()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10260",
    "question": "Как поведёт себя уже инстанциированный итератор для collection, если вызвать collection.remove()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10261",
    "question": "Как избежать ConcurrentModificationException во время перебора коллекции",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10262",
    "question": "Какая коллекция реализует дисциплину обслуживания FIFO",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10263",
    "question": "Какая коллекция реализует дисциплину обслуживания FILO",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10264",
    "question": "Зачем добавили ArrayList, если уже был Vector",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10265",
    "question": "Что работает быстрее ArrayList или LinkedList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10266",
    "question": "Какое худшее время работы метода contains() для элемента, который есть в LinkedList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10267",
    "question": "Какое худшее время работы метода contains() для элемента, который есть в ArrayList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10268",
    "question": "Какое худшее время работы метода add() для LinkedList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10269",
    "question": "Какое худшее время работы метода add() для ArrayList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10270",
    "question": "Как происходит удаление элементов из ArrayList, как меняется в этом случае размер ArrayList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10271",
    "question": "Предложи эффективный алгоритм удаления нескольких рядом стоящих элементов из середины списка, реализуемого ArrayList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10272",
    "question": "Сколько необходимо дополнительной памяти при вызове ArrayList.add()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10273",
    "question": "Сколько выделяется дополнительно памяти при вызове LinkedList.add()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10274",
    "question": "Оцени количество памяти на хранение одного примитива типа byte в LinkedList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10275",
    "question": "Оцени количество памяти на хранение одного примитива типа byte в ArrayList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10276",
    "question": "Сравни интерфейсы Queue и Deque",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10277",
    "question": "Кто кого расширяет: Queue расширяет Deque, или Deque расширяет Queue",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10278",
    "question": "Почему LinkedList реализует и List, и Deque",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10279",
    "question": "Как перебрать элементы LinkedList в обратном порядке, не используя медленный get(index)",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10280",
    "question": "Что позволяет сделать PriorityQueue",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10281",
    "question": "Stack считается «устаревшим», чем его рекомендуют заменять, почему",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10282",
    "question": "Для чего нужна IdentityHashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10283",
    "question": "В чем разница между HashMap и IdentityHashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10284",
    "question": "Для чего используется WeakHashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10285",
    "question": "В чем разница между HashMap и WeakHashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10286",
    "question": "В чем проявляется «сортированность» SortedMap, кроме того, что toString() выводит все элементы по порядку",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10287",
    "question": "Какова оценка временной сложности операций над элементами из HashMap, гарантирует ли HashMap указанную сложность выборки элемента",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10288",
    "question": "Возможна ли ситуация, когда HashMap выродится в список даже с ключами имеющими разные hashCode()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10289",
    "question": "Почему нельзя использовать byte[] в качестве ключа в HashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10290",
    "question": "Какое худшее время работы метода get(key) для ключа, которого нет в HashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10291",
    "question": "Какое худшее время работы метода get(key) для ключа, который есть в HashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10292",
    "question": "Сколько переходов происходит в момент вызова HashMap.get(key) по ключу, который есть в таблице",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10293",
    "question": "Сколько создается новых объектов, когда добавляешь новый элемент в HashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10294",
    "question": "Как и когда происходит увеличение количества корзин в HashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10295",
    "question": "Объясни смысл параметров в конструкторе HashMap(int initialCapacity, float loadFactor)",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10296",
    "question": "Будет ли работать HashMap, если все добавляемые ключи будут иметь одинаковый hashCode()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10297",
    "question": "Как перебрать все ключи Map",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10298",
    "question": "Как перебрать все значения Map",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10299",
    "question": "Как перебрать все пары «ключ-значение» в Map",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10300",
    "question": "Что будет, если добавлять элементы в TreeSet по возрастанию",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10301",
    "question": "Для Enum есть специальный класс java.util.EnumSet, зачем, чем авторов не устраивал HashSet или TreeSet",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10302",
    "question": "Какие существуют способы перебирать элементы списка",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10303",
    "question": "Каким образом можно получить синхронизированные объекты стандартных коллекций",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10304",
    "question": "Как получить коллекцию только для чтения",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10305",
    "question": "Как одной строчкой скопировать элементы любой collection в массив",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10306",
    "question": "Как одной строчкой преобразовать HashSet в ArrayList",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10307",
    "question": "Как одной строчкой преобразовать ArrayList в HashSet",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10308",
    "question": "Collections.emptyList() или новый экземпляр",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10309",
    "question": "Гарантирует ли HashMap указанную сложность выборки элемента",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10310",
    "question": "Какое максимальное число значений hashCode()",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10311",
    "question": "Назови основные реализации Set",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10312",
    "question": "Назови основные реализации Map",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10313",
    "question": "CopyOnWrite коллекции",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10314",
    "question": "Как используя HashMap получить бесконечный цикл",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10315",
    "question": "Почему Map не наследуется от Collection",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10316",
    "question": "Почему нельзя использовать byte[] в качестве ключа в HashMap",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10317",
    "question": "Какое дерево лежит в реализации TreeSet",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10318",
    "question": "Почему нет конкретных реализаций интерфейса Iterator",
    "chance": "6",
    "tag": "Java Collections"
  },
  {
    "id": "10319",
    "question": "Какие нововведения, появились в Java 8 и JDK 8",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10320",
    "question": "К каким переменным есть доступ у лямбда-выражений",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10321",
    "question": "Как отсортировать список строк с помощью лямбда-выражения",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10322",
    "question": "Какие виды ссылок на методы знаешь",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10323",
    "question": "Объясни выражение System.out::println",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10324",
    "question": "Для чего нужны функциональные интерфейсы Function<T,R>, DoubleFunction<R>, IntFunction<R> и LongFunction<R>",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10325",
    "question": "Для чего нужны функциональные интерфейсы UnaryOperator<T>, DoubleUnaryOperator, IntUnaryOperator и LongUnaryOperator",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10327",
    "question": "Для чего нужны функциональные интерфейсы Predicate<T>, DoublePredicate, IntPredicate и LongPredicate",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10328",
    "question": "Для чего нужны функциональные интерфейсы Consumer<T>, DoubleConsumer, IntConsumer и LongConsumer",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10329",
    "question": "Для чего нужен функциональный интерфейс BiConsumer<T,U>",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10330",
    "question": "Для чего нужен функциональный интерфейс BiFunction<T,U,R>",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10331",
    "question": "Для чего нужен функциональный интерфейс BiPredicate<T,U>",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10332",
    "question": "Для чего нужны функциональные интерфейсы вида _To_Function",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10333",
    "question": "Для чего нужны функциональные интерфейсы ToDoubleBiFunction<T,U>, ToIntBiFunction<T,U> и ToLongBiFunction<T,U>",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10334",
    "question": "Для чего нужны функциональные интерфейсы ToDoubleFunction<T>, ToIntFunction<T> и ToLongFunction<T>",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10335",
    "question": "Для чего нужны функциональные интерфейсы ObjDoubleConsumer<T>, ObjIntConsumer<T> и ObjLongConsumer<T>",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10336",
    "question": "Что такое StringJoiner",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10337",
    "question": "Как вызывать default метод интерфейса в реализующем этот интерфейс классе",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10338",
    "question": "Что такое static метод интерфейса",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10339",
    "question": "Как вызывать static метод интерфейса",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10340",
    "question": "Какие существуют способы создания стрима",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10341",
    "question": "В чем разница между Collection и Stream",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10342",
    "question": "Для чего нужен метод collect() в стримах",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10343",
    "question": "Для чего в стримах предназначены методы map() и mapToInt(), mapToDouble(), mapToLong()",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10344",
    "question": "Для чего в стримах предназначен метод limit()",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10345",
    "question": "Для чего в стримах предназначен метод sorted()",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10346",
    "question": "Для чего в стримах предназначены методы flatMap(), flatMapToInt(), flatMapToDouble(), flatMapToLong()",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10347",
    "question": "Какие конечные методы работы со стримами знаешь",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10348",
    "question": "Какие промежуточные методы работы со стримами знаешь",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10349",
    "question": "Какие дополнительные методы для работы с ассоциативными массивами (maps) появились в Java 8",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10350",
    "question": "Что такое LocalDateTime",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10351",
    "question": "Что такое ZonedDateTime",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10352",
    "question": "Что такое Nashorn",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10353",
    "question": "Что такое jjs",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10354",
    "question": "Какой класс появился в Java 8 для кодирования/декодирования данных",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "10355",
    "question": "Назови основные характеристики шаблонов",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "10356",
    "question": "Типы шаблонов проектирования",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "10357",
    "question": "Приведи примеры основных шаблонов проектирования",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "10358",
    "question": "Приведи примеры порождающих шаблонов проектирования",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "10359",
    "question": "Приведи примеры структурных шаблонов проектирования",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "10360",
    "question": "Приведи примеры поведенческих шаблонов проектирования",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "10361",
    "question": "Что такое «антипаттерн», какие антипаттерны знаешь",
    "chance": "6",
    "tag": "Паттерны"
  },
  {
    "id": "10362",
    "question": "Что такое «интеграционное тестирование»",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "10363",
    "question": "Какие существуют виды тестовых объектов",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "10364",
    "question": "Чем stub отличается от mock",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "10365",
    "question": "Что такое «фикстуры»",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "10366",
    "question": "Какие аннотации фикстур существуют в JUnit",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "10367",
    "question": "Для чего в JUnit используется аннотация @Ignore",
    "chance": "6",
    "tag": "Тестирование"
  },
  {
    "id": "10368",
    "question": "Как изменить стандартное поведение сериализации/десериализации",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10369",
    "question": "Как исключить поля из сериализации",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10370",
    "question": "Какое влияние оказывают на сериализуемость модификаторы полей static и final",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10371",
    "question": "Как не допустить сериализацию",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10372",
    "question": "Как создать собственный протокол сериализации",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10373",
    "question": "Какая роль поля serialVersionUID в сериализации",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10374",
    "question": "Когда стоит изменять значение поля serialVersionUID",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10375",
    "question": "В чем проблема сериализации Singleton",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10376",
    "question": "Какие существуют способы контроля за значениями десериализованного объекта",
    "chance": "6",
    "tag": "Сериализация"
  },
  {
    "id": "10377",
    "question": "Какие особенности NIO знаешь",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10378",
    "question": "Что такое «каналы»",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10379",
    "question": "Какие существуют виды потоков ввода/вывода",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10380",
    "question": "Назови основные классы потоков ввода/вывода",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10381",
    "question": "В каких пакетах расположены классы потоков ввода/вывода",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10382",
    "question": "Какие подклассы класса InputStream знаешь, для чего они предназначены",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10383",
    "question": "Для чего используется PushbackInputStream",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10384",
    "question": "Для чего используется SequenceInputStream",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10385",
    "question": "Какой класс позволяет читать данные из входного байтового потока в формате примитивных типов данных",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10386",
    "question": "Какие подклассы класса OutputStream знаешь, для чего они предназначены",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10387",
    "question": "Какие подклассы класса Reader знаешь, для чего они предназначены",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10388",
    "question": "Какие подклассы класса Writer знаешь, для чего они предназначены",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10389",
    "question": "В чем отличие класса PrintWriter от PrintStream",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10390",
    "question": "Чем отличаются и что общего у InputStream, OutputStream, Reader, Writer",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10391",
    "question": "Какие классы позволяют преобразовать байтовые потоки в символьные и обратно",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10392",
    "question": "Какие классы позволяют ускорить чтение/запись за счет использования буфера",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10455",
    "question": "Паттерн наблюдатель",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10393",
    "question": "Какой класс предназначен для работы с элементами файловой системы",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10394",
    "question": "Какие методы класса File знаешь",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10395",
    "question": "Что знаешь об интерфейсе FileFilter",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10396",
    "question": "Что знаешь о RandomAccessFile",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10397",
    "question": "Какие режимы доступа к файлу есть у RandomAccessFile",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10398",
    "question": "Какие классы поддерживают чтение и запись потоков в компрессированном формате",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10399",
    "question": "Существует ли возможность перенаправить потоки стандартного ввода/вывода",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10400",
    "question": "Какой символ является разделителем при указании пути в файловой системе",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10401",
    "question": "Что такое «абсолютный путь» и «относительный путь»",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10402",
    "question": "Что такое «символьная ссылка»",
    "chance": "6",
    "tag": "Потоки"
  },
  {
    "id": "10403",
    "question": "Что такое WWW",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10404",
    "question": "Что такое W3C",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10405",
    "question": "Какие существуют уровни модели OSI",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10406",
    "question": "Что такое TCP/IP",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10407",
    "question": "Что такое UDP",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10408",
    "question": "Чем отличаются TCP и UDP",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10409",
    "question": "Что такое протокол передачи данных",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10410",
    "question": "Какие протоколы передачи данных знаешь",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10411",
    "question": "Что такое FTP",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10412",
    "question": "Что такое MIME тип",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10413",
    "question": "Что такое Web server",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10414",
    "question": "Что такое Web application",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10415",
    "question": "Что такое Application server",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10416",
    "question": "Чем отличаются Web server и Application server",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10417",
    "question": "Что такое AJAX, как принципиально устроена эта технология",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10418",
    "question": "Что такое WebSocket",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10420",
    "question": "Что такое JSON схема",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10421",
    "question": "Что такое «HTML»",
    "chance": "6",
    "tag": "WEB"
  },
  {
    "id": "10422",
    "question": "Что такое «HTML»",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10423",
    "question": "Что такое «XHTML»",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10424",
    "question": "Что такое DOCTYPE и зачем он нужен",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10425",
    "question": "Для чего предназначен тег <head>",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10426",
    "question": "Чем отличается <div> от <span>",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10427",
    "question": "Как обозначаются комментарии в HTML",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10428",
    "question": "Каким образом задаётся адрес документа, на который следует перейти",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10429",
    "question": "Как сделать ссылку на адрес электронной почты",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10430",
    "question": "Для чего предназначен тег <em>",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10431",
    "question": "Для чего предназначены теги <ol>, <ul>, <li>",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10432",
    "question": "Для чего предназначены теги <dl>, <dt>, <dd>",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10433",
    "question": "Для чего предназначены теги <tr>, <th>, <td>",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10434",
    "question": "Обязательно ли писать атрибут alt в теге <img>",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10435",
    "question": "В каком регистре лучше писать HTML-код",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10436",
    "question": "Что такое «мнемоника (entity)»",
    "chance": "6",
    "tag": "HTML"
  },
  {
    "id": "10437",
    "question": "Что такое «CSS»",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10438",
    "question": "Как в CSS обозначаются комментарии",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10439",
    "question": "Что такое «селектор»",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10440",
    "question": "Перечисли основные виды селекторов",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10441",
    "question": "Что такое псевдокласс",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10442",
    "question": "Какие существуют селекторы аттрибутов",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10443",
    "question": "В чем разница между #my и .my",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10445",
    "question": "В чем разница между margin и padding",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10446",
    "question": "В чем заключается разница между значениями 0 и auto в свойстве margin",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10447",
    "question": "Какое свойство задает цвет фона",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10448",
    "question": "Для чего используется свойство clear",
    "chance": "6",
    "tag": "CSS"
  },
  {
    "id": "10449",
    "question": "Что представляет собой «обмен сообщениями»",
    "chance": "6",
    "tag": "ООП"
  },
  {
    "id": "10450",
    "question": "Расскажи про интерфейс",
    "chance": "6",
    "tag": "ООП"
  },
  {
    "id": "10451",
    "question": "Что подразумевают в плане принципов ООП выражения «является» и «имеет»",
    "chance": "6",
    "tag": "ООП"
  },
  {
    "id": "10452",
    "question": "В чем разница между композицией и агрегацией",
    "chance": "6",
    "tag": "ООП"
  },
  {
    "id": "10453",
    "question": "Какие есть языки на JVM",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10454",
    "question": "Что такое реактивное программирование",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10457",
    "question": "Что такое DDD",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10458",
    "question": "Что такое FDD",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10459",
    "question": "Инструменты CI/CD",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10460",
    "question": "Утечка памяти",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10461",
    "question": "Утечки памяти в Java",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10462",
    "question": "Сложность быстрой сортировки",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10463",
    "question": "Что такое Big O",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10464",
    "question": "Что такое ленивая загрузка",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10465",
    "question": "В чём разница между «конкуренцией» и «параллелизмом»",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10466",
    "question": "Что такое «кооперативная многозадачность»",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10467",
    "question": "Какой тип многозадачности использует Java, чем обусловлен этот выбор",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10468",
    "question": "Что такое ordering",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10469",
    "question": "Что такое as-if-serial semantics",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10470",
    "question": "Что такое sequential consistency",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10471",
    "question": "Что такое visibility",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10472",
    "question": "Что такое atomicity",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10473",
    "question": "Что такое mutual exclusion",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10474",
    "question": "Что такое safe publication",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10475",
    "question": "Что такое «зелёные потоки» и есть ли они в Java",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10476",
    "question": "В чём заключается разница между методами start() и run()",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10477",
    "question": "Как принудительно запустить поток",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10478",
    "question": "В каких состояниях может находиться поток",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10479",
    "question": "Можно ли создавать новые экземпляры класса, пока выполняется static synchronized метод",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10480",
    "question": "Зачем может быть нужен private мьютекс",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10481",
    "question": "В чем разница между notify() и notifyAll()",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10482",
    "question": "Почему методы wait() и notify() вызываются только в синхронизированном блоке",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10483",
    "question": "Чем отличается работа метода wait() с параметром и без параметра",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10484",
    "question": "Чем отличаются методы Thread.sleep() и Thread.yield()",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10485",
    "question": "Как работает метод Thread.join()",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10486",
    "question": "Что такое livelock",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10487",
    "question": "Как проверить, удерживает ли поток монитор определённого ресурса",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10488",
    "question": "На каком объекте происходит синхронизация при вызове static synchronized метода",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10489",
    "question": "Для чего используется ключевое слово synchronized",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10490",
    "question": "В чём различия между volatile и Atomic переменными",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10491",
    "question": "В чём заключаются различия между java.util.concurrent.Atomic*.compareAndSwap() и java.util.concurrent.Atomic*.weakCompareAndSwap()",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10492",
    "question": "Можно ли сделать основной поток программы демоном",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10493",
    "question": "Что значит «усыпить» поток",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10494",
    "question": "Что такое FutureTask",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10495",
    "question": "В чем заключаются различия между CyclicBarrier и CountDownLatch",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10496",
    "question": "Существует ли способ решения проблемы race condition",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10497",
    "question": "Как остановить поток",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10498",
    "question": "Почему не рекомендуется использовать метод Thread.stop()",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10499",
    "question": "Что происходит, когда в потоке выбрасывается исключение",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10500",
    "question": "В чем разница между interrupted() и isInterrupted()",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10501",
    "question": "Что такое «пул потоков»",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10502",
    "question": "Какого размера должен быть пул потоков",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10503",
    "question": "Что будет, если очередь пула потоков уже заполнена, но подаётся новая задача",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10504",
    "question": "В чём заключается различие между методами submit() и execute() у пула потоков",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10505",
    "question": "В чем заключаются различия между cтеком (stack) и кучей (heap) с точки зрения многопоточности",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10506",
    "question": "Как поделиться данными между двумя потоками",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10507",
    "question": "Как получить дамп потока",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10508",
    "question": "Что такое ThreadLocal-переменная",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10509",
    "question": "Назовите различия между synchronized и ReentrantLock",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10510",
    "question": "Что такое «блокирующий метод»",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10511",
    "question": "Что такое «фреймворк Fork/Join»",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10512",
    "question": "Что такое double checked locking Singleton",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10513",
    "question": "Как создать потокобезопасный Singleton",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10514",
    "question": "Чем полезны неизменяемые объекты",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10515",
    "question": "Что такое busy spin",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10516",
    "question": "Перечисли принципы, которым вы следуешь в многопоточном программировании",
    "chance": "6",
    "tag": "Многопоточность"
  },
  {
    "id": "10517",
    "question": "Какие существуют типы логов",
    "chance": "6",
    "tag": "Журналирование"
  },
  {
    "id": "10518",
    "question": "Из каких частей состоит система журналирования log4j",
    "chance": "6",
    "tag": "Журналирование"
  },
  {
    "id": "10519",
    "question": "Что такое Logger в log4j",
    "chance": "6",
    "tag": "Журналирование"
  },
  {
    "id": "10520",
    "question": "Что такое Appender в log4j",
    "chance": "6",
    "tag": "Журналирование"
  },
  {
    "id": "10521",
    "question": "Что такое Layout в log4j",
    "chance": "6",
    "tag": "Журналирование"
  },
  {
    "id": "10522",
    "question": "Перечисли уровни журналирования в log4j, назови порядок их приоритетности",
    "chance": "6",
    "tag": "Журналирование"
  },
  {
    "id": "10523",
    "question": "Какие существуют способы конфигурирования log4j",
    "chance": "6",
    "tag": "Журналирование"
  },
  {
    "id": "10524",
    "question": "Что такое SQL-инъекция",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10525",
    "question": "Какие бывают NoSQL базы данных",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10526",
    "question": "Что такое шардирование",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10527",
    "question": "Назови основные свойства транзакции",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10528",
    "question": "Когда полное сканирование набора данных выгоднее доступа по индексу",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10529",
    "question": "Имеет ли смысл индексировать данные, имеющие небольшое количество возможных значений",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10530",
    "question": "В чем отличие между кластерными и некластерными индексами",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10531",
    "question": "Какие типы индексов существуют",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10532",
    "question": "Какие существуют типы связей в базе данных, приведите примеры",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10533",
    "question": "Что такое альтернативный (alternate) ключ",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10534",
    "question": "Что такое потенциальный (candidate) ключ",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10535",
    "question": "Что такое составной (composite) ключ",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10536",
    "question": "Что такое простой ключ",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10537",
    "question": "Что такое «система управления базами данных»",
    "chance": "6",
    "tag": "Базы данных"
  },
  {
    "id": "10543",
    "question": "Кто вызывает методы контроллера",
    "chance": "6",
    "tag": "Нет"
  },
  {
    "id": "10545",
    "question": "Что такое Lombok?",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "10326",
    "question": "Для чего нужны функциональные интерфейсы BinaryOperator<T>, DoubleBinaryOperator, IntBinaryOperator и LongBinaryOperator",
    "chance": "6",
    "tag": "Java 8"
  },
  {
    "id": "27",
    "question": "Расскажи про свой бэкграунд",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "32",
    "question": "Что такое D в SOLID?",
    "chance": "6",
    "tag": "Общие"
  },
  {
    "id": "70",
    "question": "В чем разница между статическим и динамическим связыванием в Java",
    "chance": "6",
    "tag": "ООП"
  },
  {
    "id": "56",
    "question": "Какой у тебя совокупный опыт в Java",
    "chance": "6",
    "tag": "Общие"
  }
]
